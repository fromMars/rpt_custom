; Calculatie overzicht

defines
;needed by JoPPS.QIF
  NO_COLORS     =0

include JoPPS.QIF
include Part.QIF
include Piece.QIF
include Attrib.QIF
include Glass.QIF
include Extra.QIF
include Mops.QIF
include Annex.QIF
include Charge.QIF

defines
  C_ITEM                      =90
  C_CHARGE                    =900
  C_JOB                       =1000

  FRMT_NONE                   =0
  FRMT_COUNT       	          =1
  FRMT_LENGTH_M    	          =2
  FRMT_LENGTH_MM              =3
  FRMT_SIZE                   =4
  FRMT_AREA_M2                =5
  FRMT_AREA_DM2               =6
  FRMT_WEIGHT                 =7
  FRMT_VOLUME                 =8

  DETAIL_TRACE                =%CALCULATION_SUMMARY_FORMAT%
  DB_PART_NO_SUM              =SOMAANTAL
  DB_PART_TIME1_SUM           =SOMTIJD1
  DB_PART_TIME2_SUM           =SOMTIJD2
  DB_CHARGE_NO_SUM            =SOMAANTAL
  DB_CHARGE_QUANTITY_SUM      =SOMWAARDE
  DB_CHARGE_PRICE_SUM         =SOMPRIJS
  DB_CHARGE_TIME_SUM          =SOMTIJD
  DB_PIECE_CFPRICE_SUM        =SOMPRIJS
  DB_PIECE_JOBTIME_SUM        =SOMTIJD0
  DB_PIECE_TIME1_SUM          =SOMTIJD1
  DB_PIECE_TIME2_SUM          =SOMTIJD2
  DB_ATTRIB_JOBTIME_SUM       =SOMTIJD0
  DB_ATTRIB_TIME1_SUM         =SOMTIJD1
  DB_ATTRIB_TIME2_SUM         =SOMTIJD2
  DB_GLASS_JOBTIME_SUM        =SOMTIJD0
  DB_GLASS_TIME1_SUM          =SOMTIJD1
  DB_GLASS_TIME2_SUM          =SOMTIJD2
  DB_EXTRA_JOBTIME_SUM        =SOMTIJD0
  DB_EXTRA_TIME1_SUM          =SOMTIJD1
  DB_EXTRA_TIME2_SUM          =SOMTIJD2
  DB_MOPS_NO_SUM              =SOMAANTAL
  DB_MOPS_JOBTIME_SUM         =SOMTIJD0
  DB_MOPS_TIME1_SUM           =SOMTIJD1
  DB_MOPS_TIME2_SUM           =SOMTIJD2
  DB_PART_NO                  =AANTAL
  DB_CHARGE_NO                =AANTAL
  DB_PRODUCT_LOSS             =VERLIES
  M_DB_PART_REBATE            =%IF{%CALCULATION_SUMMARY_REBATE%,(1-%DB_PART_REBATE%/100),1}
  M_DB_CHARGE_REBATE          =%IF{%CALCULATION_SUMMARY_REBATE%,(1-%DB_CHARGE_REBATE%/100),1}
  M_DB_PIECE_REBATE           =%IF{%CALCULATION_SUMMARY_REBATE%,(1-%DB_PIECE_REBATE%/100),1}
  M_DB_ATTRIB_REBATE          =%IF{%CALCULATION_SUMMARY_REBATE%,(1-%DB_ATTRIB_REBATE%/100),1}
  M_DB_GLASS_REBATE           =%IF{%CALCULATION_SUMMARY_REBATE%,(1-%DB_GLASS_REBATE%/100),1}
  M_DB_EXTRA_REBATE           =%IF{%CALCULATION_SUMMARY_REBATE%,(1-%DB_EXTRA_REBATE%/100),1}
  M_DB_LOSS_PROFIEL           =avg(%DB_PIECE_LOSS%)
  M_DB_LOSS_PRODUCT           =sum(%DB_PIECE_CFREMLENGTH%)
  M_DB_USED_PRODUCT           =sum(%DB_PIECE_LOPT%*%DB_PIECE_OPTREPNO%/1000)
  M_DB_PART_LENGTH            =sum(%DB_PIECE_CFLENGTH%*%DB_PIECE_LOSS%*%DB_PIECE_CFPART%/100)
  M_DB_PART_PRICE             =sum(%DB_PIECE_CFPRICE%*%DB_PIECE_LOSS%*%M_DB_PIECE_REBATE%*%DB_PIECE_CFPART%/100)
  M_DB_PART_PRICE_SUM         =sum(%DB_PIECE_CFPRICE%*%DB_PIECE_LOSS%*%M_DB_PIECE_REBATE%*%DB_PIECE_CFSPLIT%*%DB_PIECE_CFPART%/100)
  M_DB_PART_LOSS              =%M_DB_LOSS_PROFIEL%*%DB_PIECE_CFPART%
  M_DB_REST_LENGTH            =sum(%DB_PIECE_CFREMLENGTH%*%DB_PIECE_CFREST%)
  M_DB_REST_PRICE             =sum(%DB_PIECE_CFPRICE%*%M_DB_PIECE_REBATE%*%DB_PIECE_CFREST%)
  M_DB_REST_PRICE_SUM         =sum(%DB_PIECE_CFPRICE%*%M_DB_PIECE_REBATE%*%DB_PIECE_CFSPLIT%*%DB_PIECE_CFREST%)
  M_DB_REST_LOSS              =(%M_DB_LOSS_PRODUCT%/%M_DB_USED_PRODUCT%)*%DB_PIECE_CFREST%*100

fields
  DSP_PART_NO_SUM             = @%DB_PART_NO_SUM%         DISPLAY AS %FD_TOTQUANTITY%
  DSP_PART_PRICE_SUM          = @2                        DISPLAY AS %FD_TOTUNITS%
  DSP_PART_TIME1_SUM          = @%DB_PART_TIME1_SUM%      DISPLAY AS %FD_TOTTIME%
  DSP_PART_TIME2_SUM          = @%DB_PART_TIME2_SUM%      DISPLAY AS %FD_TOTTIME%

  DSP_CHARGE_NO_SUM           = @%DB_CHARGE_NO_SUM%       DISPLAY AS %FD_TOTQUANTITY%
  DSP_CHARGE_COUNT_SUM        = @%DB_CHARGE_QUANTITY_SUM% DISPLAY AS %FD_TOTQUANTITY%
  DSP_CHARGE_LENGTH_M_SUM     = @%DB_CHARGE_QUANTITY_SUM% DISPLAY AS %FD_TOTMEASURE1%
  DSP_CHARGE_LENGTH_MM_SUM    = @%DB_CHARGE_QUANTITY_SUM% DISPLAY AS %FD_TOTMEASURE0%
  DSP_CHARGE_AREA_M2_SUM      = @%DB_CHARGE_QUANTITY_SUM% DISPLAY AS %FD_TOTAREA1%
  DSP_CHARGE_AREA_DM2_SUM     = @%DB_CHARGE_QUANTITY_SUM% DISPLAY AS %FD_TOTAREA0%
  DSP_CHARGE_WEIGHT_SUM       = @%DB_CHARGE_QUANTITY_SUM% DISPLAY AS %FD_TOTWEIGHT%
  DSP_CHARGE_VOLUME_SUM       = @%DB_CHARGE_QUANTITY_SUM% DISPLAY AS %FD_TOTVOLUME%
  DSP_CHARGE_PRICE_SUM        = @%DB_CHARGE_PRICE_SUM%    DISPLAY AS %FD_TOTUNITS%
  DSP_CHARGE_TIME_SUM         = @%DB_CHARGE_TIME_SUM%     DISPLAY AS %FD_TOTTIME%

  DSP_PIECE_CFLENGTH_SUM      = @1                        DISPLAY AS %FD_TOTMEASURE1%
  DSP_PIECE_CFREMLENGTH_SUM   = @1                        DISPLAY AS %FD_TOTMEASURE1%
  DSP_PIECE_CFPRICE_SUM       = @%DB_PIECE_CFPRICE_SUM%   DISPLAY AS %FD_TOTUNITS%
  DSP_PIECE_JOBTIME_SUM       = @%DB_PIECE_JOBTIME_SUM%   DISPLAY AS %FD_TOTTIME%
  DSP_PIECE_TIME1_SUM         = @%DB_PIECE_TIME1_SUM%     DISPLAY AS %FD_TOTTIME%
  DSP_PIECE_TIME2_SUM         = @%DB_PIECE_TIME2_SUM%     DISPLAY AS %FD_TOTTIME%

  DSP_ATTRIB_CFLENGTH_SUM     = @1                        DISPLAY AS %FD_TOTMEASURE1%
  DSP_ATTRIB_NO_SUM           = @1                        DISPLAY AS %FD_TOTQUANTITY%
  DSP_ATTRIB_CFPRICE_SUM      = @2                        DISPLAY AS %FD_TOTUNITS%
  DSP_ATTRIB_JOBTIME_SUM      = @%DB_ATTRIB_JOBTIME_SUM%  DISPLAY AS %FD_TOTTIME%
  DSP_ATTRIB_TIME1_SUM        = @%DB_ATTRIB_TIME1_SUM%    DISPLAY AS %FD_TOTTIME%
  DSP_ATTRIB_TIME2_SUM        = @%DB_ATTRIB_TIME2_SUM%    DISPLAY AS %FD_TOTTIME%

  DSP_GLASS_NO_SUM            = @1                        DISPLAY AS %FD_TOTQUANTITY%
  DSP_GLASS_CFPRICE_SUM       = @2                        DISPLAY AS %FD_TOTUNITS%
  DSP_GLASS_JOBTIME_SUM       = @%DB_GLASS_JOBTIME_SUM%   DISPLAY AS %FD_TOTTIME%
  DSP_GLASS_TIME1_SUM         = @%DB_GLASS_TIME1_SUM%     DISPLAY AS %FD_TOTTIME%
  DSP_GLASS_TIME2_SUM         = @%DB_GLASS_TIME2_SUM%     DISPLAY AS %FD_TOTTIME%

  DSP_EXTRA_NO_SUM            = @1                        DISPLAY AS %FD_TOTQUANTITY%
  DSP_EXTRA_CFPRICE_SUM       = @2                        DISPLAY AS %FD_TOTUNITS%
  DSP_EXTRA_JOBTIME_SUM       = @%DB_EXTRA_JOBTIME_SUM%   DISPLAY AS %FD_TOTTIME%
  DSP_EXTRA_TIME1_SUM         = @%DB_EXTRA_TIME1_SUM%     DISPLAY AS %FD_TOTTIME%
  DSP_EXTRA_TIME2_SUM         = @%DB_EXTRA_TIME2_SUM%     DISPLAY AS %FD_TOTTIME%

  DSP_MOPS_NO_SUM             = @%DB_MOPS_NO_SUM%         DISPLAY AS %FD_TOTQUANTITY%
  DSP_MOPS_JOBTIME_SUM        = @%DB_MOPS_JOBTIME_SUM%    DISPLAY AS %FD_TOTTIME%
  DSP_MOPS_TIME1_SUM          = @%DB_MOPS_TIME1_SUM%      DISPLAY AS %FD_TOTTIME%
  DSP_MOPS_TIME2_SUM          = @%DB_MOPS_TIME2_SUM%      DISPLAY AS %FD_TOTTIME%

  DSP_PART_NO                 = @%DB_PART_NO%             DISPLAY AS %FD_QUANTITY%
  DSP_CHARGE_NO               = @%DB_CHARGE_NO%           DISPLAY AS %FD_QUANTITY%
  DSP_PRODUCT_LOSS            = @%DB_PRODUCT_LOSS%        DISPLAY AS %FD_PROCENT100_2%

  M_B_SPLIT                   = %IF{@%DB_PIECE_CFSPLIT%,,<i>}  DISPLAY AS LEFT(3)
  M_E_SPLIT                   = %IF{@%DB_PIECE_CFSPLIT%,,</i>} DISPLAY AS LEFT(4)

  SH_CHARGE_COUNT             = %EVAL{@%DB_CHARGE_FORMAT% = %FRMT_COUNT%}
  SH_CHARGE_LENGTH_M          = %EVAL{@%DB_CHARGE_FORMAT% = %FRMT_LENGTH_M%}
  SH_CHARGE_LENGTH_MM         = %EVAL{@%DB_CHARGE_FORMAT% = %FRMT_LENGTH_MM%}
  SH_CHARGE_AREA_M2           = %EVAL{@%DB_CHARGE_FORMAT% = %FRMT_AREA_M2%}
  SH_CHARGE_AREA_DM2          = %EVAL{@%DB_CHARGE_FORMAT% = %FRMT_AREA_DM2%}
  SH_CHARGE_WEIGHT            = %EVAL{@%DB_CHARGE_FORMAT% = %FRMT_WEIGHT%}
  SH_CHARGE_VOLUME            = %EVAL{@%DB_CHARGE_FORMAT% = %FRMT_VOLUME%}

  SH_CHARGE_COUNT_SUM         = %EVAL{@@%DB_CHARGE_FORMAT% = %FRMT_COUNT%}
  SH_CHARGE_LENGTH_M_SUM      = %EVAL{@@%DB_CHARGE_FORMAT% = %FRMT_LENGTH_M%}
  SH_CHARGE_LENGTH_MM_SUM     = %EVAL{@@%DB_CHARGE_FORMAT% = %FRMT_LENGTH_MM%}
  SH_CHARGE_AREA_M2_SUM       = %EVAL{@@%DB_CHARGE_FORMAT% = %FRMT_AREA_M2%}
  SH_CHARGE_AREA_DM2_SUM      = %EVAL{@@%DB_CHARGE_FORMAT% = %FRMT_AREA_DM2%}
  SH_CHARGE_WEIGHT_SUM        = %EVAL{@@%DB_CHARGE_FORMAT% = %FRMT_WEIGHT%}
  SH_CHARGE_VOLUME_SUM        = %EVAL{@@%DB_CHARGE_FORMAT% = %FRMT_VOLUME%}
  
using %FILE_HEADER_PROJECT%

next

using %FILE_BARCODE%

next

report
  select   count(*) as %DB_CHARGE_NO%,
		   sum(%DB_CHARGE_QUANTITY%) as %DB_CHARGE_QUANTITY%,
           sum(%DB_CHARGE_PRICE% * %M_DB_CHARGE_REBATE%) as %DB_CHARGE_PRICE%,
           sum(%DB_CHARGE_TIME%) as %DB_CHARGE_TIME%,
           %DB_CHARGE_KIND%,
           %DB_CHARGE_INDEX%,
           %DB_CHARGE_DESC%,
           %DB_CHARGE_ARTICLE%,
           %DB_CHARGE_DATALINK%,
           %DB_CHARGE_PROJECT%,
		   %DB_CHARGE_FORMAT%
  from     %TBL_CHARGE%
  where    ((%DB_CHARGE_PRICE% <> 0) or (%DB_CHARGE_TIME% <> 0))
  and      %DB_CHARGE_OPTION% in %RUNOPTIONS%
  and      %DB_CHARGE_KIND% in (%C_ITEM%,%C_CHARGE%,%C_JOB%)
  group by %DB_CHARGE_FORMAT%, %DB_CHARGE_PROJECT%,
           %DB_CHARGE_KIND%, %DB_CHARGE_INDEX%,
           %DB_CHARGE_DESC%, %DB_CHARGE_ARTICLE%, 
           %DB_CHARGE_DATALINK%
  having   count(*) > 0

calculate
  sum(%DB_CHARGE_NO%) as %DB_CHARGE_NO_SUM%, sum(%DB_CHARGE_QUANTITY%) as %DB_CHARGE_QUANTITY_SUM%, sum(%DB_CHARGE_PRICE%) as %DB_CHARGE_PRICE_SUM%, sum(%DB_CHARGE_TIME%) as %DB_CHARGE_TIME_SUM% break on %DB_CHARGE_PROJECT%
  sum(%DB_CHARGE_NO%) as %DB_CHARGE_NO_SUM%, sum(%DB_CHARGE_QUANTITY%) as %DB_CHARGE_QUANTITY_SUM%, sum(%DB_CHARGE_PRICE%) as %DB_CHARGE_PRICE_SUM%, sum(%DB_CHARGE_TIME%) as %DB_CHARGE_TIME_SUM% break on %DB_CHARGE_PROJECT%, %DB_CHARGE_FORMAT%

using %REPORTNAME%_B_PROJECT.%REPORTTYPE%%LANGUAGE%

next

report
  select   count(*) as %DB_PART_NO%,
           sum(%DB_PART_PRICE% * %M_DB_PART_REBATE%) as %DB_PART_PRICE%,
           sum(%DB_PART_TIME1%) as %DB_PART_TIME1%,
           sum(%DB_PART_TIME2%) as %DB_PART_TIME2%,
           %DB_PART_ID%,
           %DB_PART_DESC%,
           %DB_PART_ARTICLE%,
           %DB_PART_DATALINK%,
           %DB_PART_PROJECT%,
           %DB_PART_ASSEMBLY%,
           %DB_PART_FRAME%
  from     %TBL_PART%
  where    ((%DB_PART_PRICE% <> 0) or (%DB_PART_TIME1% <> 0) or (%DB_PART_TIME2% <> 0))
  and      %DB_PART_OPTION% in %RUNOPTIONS%
  and      %DB_PART_ID% in (401,402)
  group by %DB_PART_PROJECT%, %DB_PART_ASSEMBLY%, %DB_PART_FRAME%,  
           %DB_PART_ID%, %DB_PART_DESC%, %DB_PART_ARTICLE%, 
           %DB_PART_DATALINK%
  having   count(*) > 0

calculate
  sum(%DB_PART_NO%) as %DB_PART_NO_SUM%, sum(%DB_PART_PRICE%), sum(%DB_PART_TIME1%) as %DB_PART_TIME1_SUM%, sum(%DB_PART_TIME2%) as %DB_PART_TIME2_SUM% break on %DB_PART_PROJECT%

using %REPORTNAME%_B_PROJECT_0.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_PIECE_BATCH%) as %DB_PIECE_BATCH%,
           sum(%DB_PIECE_CFLENGTH%) as %DB_PIECE_CFLENGTH%,
           %DB_PIECE_PRODUCT%,
           %DB_PIECE_SERIE%,
           min(%DB_PIECE_PROFILEDESC%) as %DB_PIECE_PROFILEDESC%,
           min(%DB_PIECE_ARTICLECODE%) as %DB_PIECE_ARTICLECODE%,
           %DB_PIECE_ARTICLE%,
           sum(%DB_PIECE_CFPRICE% * %M_DB_PIECE_REBATE%) as %DB_PIECE_CFPRICE%,
           sum(%DB_PIECE_CFPRICE% * %DB_PIECE_CFSPLIT% * %M_DB_PIECE_REBATE%) as %DB_PIECE_CFPRICE_SUM%,
           sum(%DB_PIECE_JOBTIME%) as %DB_PIECE_JOBTIME%,
           sum(%DB_PIECE_JOBTIME% * %DB_PIECE_CFSPLIT%) as %DB_PIECE_JOBTIME_SUM%,
           sum(%DB_PIECE_TIME1%) as %DB_PIECE_TIME1%,
           sum(%DB_PIECE_TIME1% * %DB_PIECE_CFSPLIT%) as %DB_PIECE_TIME1_SUM%,
           sum(%DB_PIECE_TIME2%) as %DB_PIECE_TIME2%,
           sum(%DB_PIECE_TIME2% * %DB_PIECE_CFSPLIT%) as %DB_PIECE_TIME2_SUM%,
           %IF{%DETAIL_TRACE%,%DB_PIECE_LINK%,min(%DB_PIECE_LINK%) as %DB_PIECE_LINK%},
           %DB_PIECE_VARIETY%,
           %DB_PIECE_DATALINK%,
           %DB_PIECE_PROJECT%,
           min(%DB_PIECE_ASSEMBLY%) as %DB_PIECE_ASSEMBLY%,
           min(%DB_PIECE_FRAME%) as %DB_PIECE_FRAME%,
           min(%DB_PIECE_OPENING%) as %DB_PIECE_OPENING%,
           min(%DB_PIECE_VENTPART%) as %DB_PIECE_VENTPART%,
		   min(%DB_PIECE_CFSPLIT%) as %DB_PIECE_CFSPLIT%
  from     %TBL_PIECE%
  where    %DB_PIECE_DEPNO% > 0
  and      %DB_PIECE_NO% > 0
  and		%DB_PIECE_SPLIT%<>-2
  and      %DB_PIECE_OPTION% in %RUNOPTIONS%
  group by %DB_PIECE_PROJECT%, 
           %DB_PIECE_ARTICLE%, %DB_PIECE_PRODUCT%,
           %DB_PIECE_VARIETY%, %DB_PIECE_SERIE%, 
           %DB_PIECE_SYSTEM%, %DB_PIECE_PROFILE%,
           %DB_PIECE_DATALINK%
           %IF{%DETAIL_TRACE%,%COMMA% %DB_PIECE_LINK%,}
  having   count(*) > 0

calculate
  sum(%DB_PIECE_CFLENGTH%), sum(%DB_PIECE_CFPRICE_SUM%) as %DB_PIECE_CFPRICE_SUM%, sum(%DB_PIECE_JOBTIME_SUM%) as %DB_PIECE_JOBTIME_SUM%, sum(%DB_PIECE_TIME1_SUM%) as %DB_PIECE_TIME1_SUM%, sum(%DB_PIECE_TIME2_SUM%) as %DB_PIECE_TIME2_SUM% break on %DB_PIECE_BATCH%
  sum(%DB_PIECE_CFLENGTH%), sum(%DB_PIECE_CFPRICE_SUM%) as %DB_PIECE_CFPRICE_SUM%, sum(%DB_PIECE_JOBTIME_SUM%) as %DB_PIECE_JOBTIME_SUM%, sum(%DB_PIECE_TIME1_SUM%) as %DB_PIECE_TIME1_SUM%, sum(%DB_PIECE_TIME2_SUM%) as %DB_PIECE_TIME2_SUM% break on %DB_PIECE_BATCH%, %DB_PIECE_ARTICLE%

using %REPORTNAME%_B_PROJECT_1.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_PIECE_BATCH%) as %DB_PIECE_BATCH%,
           %M_DB_PART_LENGTH%+%M_DB_REST_LENGTH% as %DB_PIECE_CFREMLENGTH%,
           %M_DB_PART_LOSS%+%M_DB_REST_LOSS% as %DB_PRODUCT_LOSS%,
           %DB_PIECE_PRODUCT%,
           %DB_PIECE_SERIE%,
           min(%DB_PIECE_PROFILEDESC%) as %DB_PIECE_PROFILEDESC%,
           min(%DB_PIECE_ARTICLECODE%) as %DB_PIECE_ARTICLECODE%,
           %DB_PIECE_ARTICLE%,
           %DB_PIECE_LOSSTYPE%,
           %M_DB_PART_PRICE%+%M_DB_REST_PRICE% as %DB_PIECE_CFPRICE%,
           %M_DB_PART_PRICE_SUM%+%M_DB_REST_PRICE_SUM% as %DB_PIECE_CFPRICE_SUM%,
           sum(%DB_PIECE_JOBTIME%) as %DB_PIECE_JOBTIME%,
           sum(%DB_PIECE_JOBTIME% * %DB_PIECE_CFSPLIT%) as %DB_PIECE_JOBTIME_SUM%,
           sum(%DB_PIECE_TIME1%) as %DB_PIECE_TIME1%,
           sum(%DB_PIECE_TIME1% * %DB_PIECE_CFSPLIT%) as %DB_PIECE_TIME1_SUM%,
           sum(%DB_PIECE_TIME2%) as %DB_PIECE_TIME2%,
           sum(%DB_PIECE_TIME2% * %DB_PIECE_CFSPLIT%) as %DB_PIECE_TIME2_SUM%,
           %DB_PIECE_VARIETY%,
           %DB_PIECE_PROJECT%,
           min(%DB_PIECE_ASSEMBLY%) as %DB_PIECE_ASSEMBLY%,
           min(%DB_PIECE_FRAME%) as %DB_PIECE_FRAME%,
           min(%DB_PIECE_OPENING%) as %DB_PIECE_OPENING%,
           min(%DB_PIECE_VENTPART%) as %DB_PIECE_VENTPART%,
		   min(%DB_PIECE_CFSPLIT%) as %DB_PIECE_CFSPLIT%
  from     %TBL_PIECE%
  where    (%DB_PIECE_DEPNO% > 0)
  and      (((%DB_PIECE_LOSSTYPE% in (%C_ABSOLUTE_LOSS%,%C_REAL_LOSS%)) and (%DB_PIECE_ARTICLE% = %BLOCK_LOSS%))
  or       ((%DB_PIECE_LOSSTYPE% in (%C_FIXED_LOSS%)) and (%DB_PIECE_ARTICLE% != %BLOCK_LOSS%)))
  and      %DB_PIECE_OPTION% in %RUNOPTIONS%
  group by %DB_PIECE_PROJECT%, 
           %DB_PIECE_ARTICLE%, %DB_PIECE_LOSSTYPE%, %DB_PIECE_PRODUCT%,
           %DB_PIECE_VARIETY%, %DB_PIECE_SERIE%
  having   count(*) > 0

calculate
  sum(%DB_PIECE_CFREMLENGTH%), sum(%DB_PIECE_CFPRICE_SUM%) as %DB_PIECE_CFPRICE_SUM%, sum(%DB_PIECE_JOBTIME%) as %DB_PIECE_JOBTIME_SUM%, sum(%DB_PIECE_TIME1%) as %DB_PIECE_TIME1_SUM%, sum(%DB_PIECE_TIME2%) as %DB_PIECE_TIME2_SUM% break on %DB_PIECE_BATCH%
  sum(%DB_PIECE_CFREMLENGTH%), sum(%DB_PIECE_CFPRICE_SUM%) as %DB_PIECE_CFPRICE_SUM%, sum(%DB_PIECE_JOBTIME%) as %DB_PIECE_JOBTIME_SUM%, sum(%DB_PIECE_TIME1%) as %DB_PIECE_TIME1_SUM%, sum(%DB_PIECE_TIME2%) as %DB_PIECE_TIME2_SUM% break on %DB_PIECE_BATCH%, %DB_PIECE_ARTICLE%

using %REPORTNAME%_B_PROJECT_2.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_ATTRIB_BATCH%) as %DB_ATTRIB_BATCH%,
           sum(%DB_ATTRIB_NO%) as %DB_ATTRIB_NO%,
           %DB_ATTRIB_ACC%,
           %DB_ATTRIB_SERIE%,
           min(%DB_ATTRIB_ACCDESC%) as %DB_ATTRIB_ACCDESC%,
           min(%DB_ATTRIB_ARTICLECODE%) as %DB_ATTRIB_ARTICLECODE%,
           %DB_ATTRIB_ARTICLE%,
           sum(%DB_ATTRIB_CFPRICE% * %M_DB_ATTRIB_REBATE%) as %DB_ATTRIB_CFPRICE%,
           sum(%DB_ATTRIB_JOBTIME%) as %DB_ATTRIB_JOBTIME%,
           sum(%DB_ATTRIB_TIME1%) as %DB_ATTRIB_TIME1%,
           sum(%DB_ATTRIB_TIME2%) as %DB_ATTRIB_TIME2%,
           %IF{%DETAIL_TRACE%,%DB_ATTRIB_LINK%,min(%DB_ATTRIB_LINK%) as %DB_ATTRIB_LINK%},
           %DB_ATTRIB_VARIETY%,
           %DB_ATTRIB_DATALINK%,
           %DB_ATTRIB_PROJECT%,
           min(%DB_ATTRIB_ASSEMBLY%) as %DB_ATTRIB_ASSEMBLY%,
           min(%DB_ATTRIB_FRAME%) as %DB_ATTRIB_FRAME%,
           min(%DB_ATTRIB_OPENING%) as %DB_ATTRIB_OPENING%,
           min(%DB_ATTRIB_VENTPART%) as %DB_ATTRIB_VENTPART%
  from     %TBL_ATTRIB%
  where    %DB_ATTRIB_DEPNO% > 0
  and      %DB_ATTRIB_TYPE% = 1
  and      %DB_ATTRIB_OPTION% in %RUNOPTIONS%
  group by %DB_ATTRIB_PROJECT%, 
           %DB_ATTRIB_ARTICLE%, %DB_ATTRIB_ACC%,
           %DB_ATTRIB_VARIETY%, %DB_ATTRIB_SERIE%,
           %DB_ATTRIB_DATALINK%
           %IF{%DETAIL_TRACE%,%COMMA% %DB_ATTRIB_LINK%,}
  having   count(*) > 0

calculate
  sum(%DB_ATTRIB_NO%), sum(%DB_ATTRIB_CFPRICE%), sum(%DB_ATTRIB_JOBTIME%) as %DB_ATTRIB_JOBTIME_SUM%, sum(%DB_ATTRIB_TIME1%) as %DB_ATTRIB_TIME1_SUM%, sum(%DB_ATTRIB_TIME2%) as %DB_ATTRIB_TIME2_SUM% break on %DB_ATTRIB_BATCH%
  sum(%DB_ATTRIB_NO%), sum(%DB_ATTRIB_CFPRICE%), sum(%DB_ATTRIB_JOBTIME%) as %DB_ATTRIB_JOBTIME_SUM%, sum(%DB_ATTRIB_TIME1%) as %DB_ATTRIB_TIME1_SUM%, sum(%DB_ATTRIB_TIME2%) as %DB_ATTRIB_TIME2_SUM% break on %DB_ATTRIB_BATCH%, %DB_ATTRIB_ARTICLE%

using %REPORTNAME%_B_PROJECT_3.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_ATTRIB_BATCH%) as %DB_ATTRIB_BATCH%,
           sum(%DB_ATTRIB_CFLENGTH%) as %DB_ATTRIB_CFLENGTH%,
           %DB_ATTRIB_ACC%,
           %DB_ATTRIB_SERIE%,
           min(%DB_ATTRIB_ACCDESC%) as %DB_ATTRIB_ACCDESC%,
           min(%DB_ATTRIB_ARTICLECODE%) as %DB_ATTRIB_ARTICLECODE%,
           %DB_ATTRIB_ARTICLE%,
           sum(%DB_ATTRIB_CFPRICE% * %M_DB_ATTRIB_REBATE%) as %DB_ATTRIB_CFPRICE%,
           sum(%DB_ATTRIB_JOBTIME%) as %DB_ATTRIB_JOBTIME%,
           sum(%DB_ATTRIB_TIME1%) as %DB_ATTRIB_TIME1%,
           sum(%DB_ATTRIB_TIME2%) as %DB_ATTRIB_TIME2%,
           %IF{%DETAIL_TRACE%,%DB_ATTRIB_LINK%,min(%DB_ATTRIB_LINK%) as %DB_ATTRIB_LINK%},
           %DB_ATTRIB_VARIETY%,
           %DB_ATTRIB_DATALINK%,
           %DB_ATTRIB_PROJECT%,
           min(%DB_ATTRIB_ASSEMBLY%) as %DB_ATTRIB_ASSEMBLY%,
           min(%DB_ATTRIB_FRAME%) as %DB_ATTRIB_FRAME%,
           min(%DB_ATTRIB_OPENING%) as %DB_ATTRIB_OPENING%,
           min(%DB_ATTRIB_VENTPART%) as %DB_ATTRIB_VENTPART%
  from     %TBL_ATTRIB%
  where    %DB_ATTRIB_DEPNO% > 0
  and      %DB_ATTRIB_TYPE% = 2
  and      %DB_ATTRIB_OPTION% in %RUNOPTIONS%
  group by %DB_ATTRIB_PROJECT%, 
           %DB_ATTRIB_ARTICLE%, %DB_ATTRIB_ACC%,
           %DB_ATTRIB_VARIETY%, %DB_ATTRIB_SERIE%,
           %DB_ATTRIB_DATALINK%
           %IF{%DETAIL_TRACE%,%COMMA% %DB_ATTRIB_LINK%,}
  having   count(*) > 0

calculate
  sum(%DB_ATTRIB_CFLENGTH%), sum(%DB_ATTRIB_CFPRICE%), sum(%DB_ATTRIB_JOBTIME%) as %DB_ATTRIB_JOBTIME_SUM%, sum(%DB_ATTRIB_TIME1%) as %DB_ATTRIB_TIME1_SUM%, sum(%DB_ATTRIB_TIME2%) as %DB_ATTRIB_TIME2_SUM% break on %DB_ATTRIB_BATCH%
  sum(%DB_ATTRIB_CFLENGTH%), sum(%DB_ATTRIB_CFPRICE%), sum(%DB_ATTRIB_JOBTIME%) as %DB_ATTRIB_JOBTIME_SUM%, sum(%DB_ATTRIB_TIME1%) as %DB_ATTRIB_TIME1_SUM%, sum(%DB_ATTRIB_TIME2%) as %DB_ATTRIB_TIME2_SUM% break on %DB_ATTRIB_BATCH%, %DB_ATTRIB_ARTICLE%

using %REPORTNAME%_B_PROJECT_4.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_GLASS_BATCH%) as %DB_GLASS_BATCH%,
           sum(%DB_GLASS_NO%) as %DB_GLASS_NO%,
           %DB_GLASS_FILLING%,
           %DB_GLASS_DESC%,
           %DB_GLASS_ARTICLE%,
           sum((%DB_GLASS_CFPRICE% - %DB_GLASS_SURPLUS% - %DB_GLASS_CHARGE% - %DB_GLASS_CROSS%) * %M_DB_GLASS_REBATE%) as %DB_GLASS_CFPRICE%,
           sum(%DB_GLASS_JOBTIME%) as %DB_GLASS_JOBTIME%,
           sum(%DB_GLASS_TIME1%) as %DB_GLASS_TIME1%,
           sum(%DB_GLASS_TIME2%) as %DB_GLASS_TIME2%,
           %IF{%DETAIL_TRACE%,%DB_GLASS_LINK%,min(%DB_GLASS_LINK%) as %DB_GLASS_LINK%},
           %DB_GLASS_DATALINK%,
           %DB_GLASS_PROJECT%,
           min(%DB_GLASS_ASSEMBLY%) as %DB_GLASS_ASSEMBLY%,
           min(%DB_GLASS_FRAME%) as %DB_GLASS_FRAME%,
           min(%DB_GLASS_OPENING%) as %DB_GLASS_OPENING%,
           min(%DB_GLASS_VENTPART%) as %DB_GLASS_VENTPART%,
           min(%DB_GLASS_VENTOPENING%) as %DB_GLASS_VENTOPENING%
  from     %TBL_GLASS%
  where    %DB_GLASS_DEPNO% > 0
  and      %DB_GLASS_OPTION% in %RUNOPTIONS%
  group by %DB_GLASS_PROJECT%, 
           %DB_GLASS_ARTICLE%, %DB_GLASS_FILLING%, %DB_GLASS_DESC%, 
           %DB_GLASS_DATALINK%
           %IF{%DETAIL_TRACE%,%COMMA% %DB_GLASS_LINK%,}
  having   count(*) > 0

calculate
  sum(%DB_GLASS_NO%), sum(%DB_GLASS_CFPRICE%), sum(%DB_GLASS_JOBTIME%) as %DB_GLASS_JOBTIME_SUM%, sum(%DB_GLASS_TIME1%) as %DB_GLASS_TIME1_SUM%, sum(%DB_GLASS_TIME2%) as %DB_GLASS_TIME2_SUM% break on %DB_GLASS_BATCH%
  sum(%DB_GLASS_NO%), sum(%DB_GLASS_CFPRICE%), sum(%DB_GLASS_JOBTIME%) as %DB_GLASS_JOBTIME_SUM%, sum(%DB_GLASS_TIME1%) as %DB_GLASS_TIME1_SUM%, sum(%DB_GLASS_TIME2%) as %DB_GLASS_TIME2_SUM% break on %DB_GLASS_BATCH%, %DB_GLASS_ARTICLE%

using %REPORTNAME%_B_PROJECT_5.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_EXTRA_BATCH%) as %DB_EXTRA_BATCH%,
           sum(%DB_EXTRA_NO%) as %DB_EXTRA_NO%,
           %DB_EXTRA_FINISH%,
           %DB_EXTRA_DESC%,
           %DB_EXTRA_ARTICLE%,
           sum(%DB_EXTRA_CFPRICE% * %M_DB_EXTRA_REBATE%) as %DB_EXTRA_CFPRICE%,
           sum(%DB_EXTRA_JOBTIME%) as %DB_EXTRA_JOBTIME%,
           sum(%DB_EXTRA_TIME1%) as %DB_EXTRA_TIME1%,
           sum(%DB_EXTRA_TIME2%) as %DB_EXTRA_TIME2%,
           %IF{%DETAIL_TRACE%,%DB_EXTRA_LINK%,min(%DB_EXTRA_LINK%) as %DB_EXTRA_LINK%},
           %DB_EXTRA_DATALINK%,
           %DB_EXTRA_PROJECT%,
           min(%DB_EXTRA_ASSEMBLY%) as %DB_EXTRA_ASSEMBLY%,
           min(%DB_EXTRA_FRAME%) as %DB_EXTRA_FRAME%
  from     %TBL_EXTRA%
  where    %DB_EXTRA_DEPNO% > 0
  and      %DB_EXTRA_OPTION% in %RUNOPTIONS%
  group by %DB_EXTRA_PROJECT%, 
           %DB_EXTRA_ARTICLE%, %DB_EXTRA_FINISH%, %DB_EXTRA_DESC%, 
           %DB_EXTRA_DATALINK%
           %IF{%DETAIL_TRACE%,%COMMA% %DB_EXTRA_LINK%,}
  having   count(*) > 0

calculate
  sum(%DB_EXTRA_NO%), sum(%DB_EXTRA_CFPRICE%), sum(%DB_EXTRA_JOBTIME%) as %DB_EXTRA_JOBTIME_SUM%, sum(%DB_EXTRA_TIME1%) as %DB_EXTRA_TIME1_SUM%, sum(%DB_EXTRA_TIME2%) as %DB_EXTRA_TIME2_SUM% break on %DB_EXTRA_BATCH%
  sum(%DB_EXTRA_NO%), sum(%DB_EXTRA_CFPRICE%), sum(%DB_EXTRA_JOBTIME%) as %DB_EXTRA_JOBTIME_SUM%, sum(%DB_EXTRA_TIME1%) as %DB_EXTRA_TIME1_SUM%, sum(%DB_EXTRA_TIME2%) as %DB_EXTRA_TIME2_SUM% break on %DB_EXTRA_BATCH%, %DB_EXTRA_ARTICLE%

using %REPORTNAME%_B_PROJECT_6.%REPORTTYPE%%LANGUAGE%

next

report
  select   sum(%DB_MOPS_NO%) as %DB_MOPS_NO%,
           %DB_MOPS_CODE%,
           %DB_MOPS_DESC%,
           sum(%DB_MOPS_JOBTIME%) as %DB_MOPS_JOBTIME%,
           sum(%DB_MOPS_TIME1%) as %DB_MOPS_TIME1%,
           sum(%DB_MOPS_TIME2%) as %DB_MOPS_TIME2%,
           %IF{%DETAIL_TRACE%,%DB_MOPS_LINK%,min(%DB_MOPS_LINK%) as %DB_MOPS_LINK%},
           %DB_MOPS_PROJECT%
  from     %TBL_MOPS%
  where    %DB_MOPS_DEPNO% > 0
  and      %DB_MOPS_OPTION% in %RUNOPTIONS%
  group by %DB_MOPS_PROJECT%, 
           %DB_MOPS_CODE%, %DB_MOPS_DESC%
           %IF{%DETAIL_TRACE%,%COMMA% %DB_MOPS_LINK%,}
  having   count(*) > 0

calculate
  sum(%DB_MOPS_NO%) as %DB_MOPS_NO_SUM%, sum(%DB_MOPS_JOBTIME%) as %DB_MOPS_JOBTIME_SUM%, sum(%DB_MOPS_TIME1%) as %DB_MOPS_TIME1_SUM%, sum(%DB_MOPS_TIME2%) as %DB_MOPS_TIME2_SUM% break on %DB_MOPS_PROJECT%

using %REPORTNAME%_B_PROJECT_7.%REPORTTYPE%%LANGUAGE%

next

report
  select   %DB_ANNEX_DESC%,
           %DB_ANNEX_KIND%
  from     %TBL_ANNEX%
  where    %DB_ANNEX_KIND% = %REPORTSLOT%
  and      %DB_ANNEX_OPTION% in %RUNOPTIONS%
  group by %DB_ANNEX_DESC%, %DB_ANNEX_KIND%
  having   count(*) > 0

calculate
  break on %DB_ANNEX_DESC%

using %FILE_ANNEX%
