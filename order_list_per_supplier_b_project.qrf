; Bestellijst/leverancier

defines
;needed by JoPPS.QIF
  NO_COLORS    =%ORDER_LIST_PER_SUPPLIER_NOCOLORS%

include JoPPS.QIF
include Attrib.QIF
include Text.QIF

defines
  ORDER_LIST_PER_SUPPLIER_BESTPRICE =1

defines
  C_PROFPRICE_UNIT         =0
  C_PROFPRICE_PACK         =1
  C_ACCPRICE_UNIT          =0
  C_ACCPRICE_GRAD          =1
  C_ACCPRICE_PACK          =2
  C_CALCMODE_OLD           =0
  C_CALCMODE_UNIT          =1
  C_CALCMODE_GRAD          =2
  C_CALCMODE_PACK          =3

  M_DB_ATTRIB_COLLI_UNIT   =sum(a.%DB_ATTRIB_NO%)
  M_DB_ATTRIB_COLLI_L_UNIT =sum(a.%DB_ATTRIB_NO%*a.%DB_ATTRIB_LENGTH%)
  M_DB_ATTRIB_COLLI_GRAD   =max(a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%)
  M_DB_ATTRIB_COLLI_L_GRAD =max(a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%)
  M_DB_ATTRIB_COLLI_PACK   =max(a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%)
; M_DB_ATTRIB_PRICE_UNIT   =sum(a.%DB_ATTRIB_ITMPRICE%*a.%DB_ATTRIB_NO%*%M_DB_ATTRIB_REBATE%)
; M_DB_ATTRIB_PRICE_L_UNIT =sum(a.%DB_ATTRIB_ITMPRICE%*a.%DB_ATTRIB_NO%*a.%DB_ATTRIB_LENGTH%*%M_DB_ATTRIB_REBATE%)
; M_DB_ATTRIB_PRICE_GRAD   =max(a.%DB_ATTRIB_QTYPRICE%*a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%*%M_DB_ATTRIB_REBATE%)
; M_DB_ATTRIB_PRICE_L_GRAD =max(a.%DB_ATTRIB_QTYPRICE%*a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%*%M_DB_ATTRIB_REBATE%)
 M_DB_ATTRIB_PRICE_PACK   =max(a.%DB_ATTRIB_SETPRICE%*a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%*%M_DB_ATTRIB_REBATE%)
  M_DB_ATTRIB_PRICE_UNIT   =sum(a.%DB_ATTRIB_PRICE%*%M_DB_ATTRIB_REBATE%)
  M_DB_ATTRIB_PRICE_L_UNIT =sum(a.%DB_ATTRIB_PRICE%/a.%DB_ATTRIB_LENGTH%*%M_DB_ATTRIB_REBATE%)
  M_DB_ATTRIB_PRICE_GRAD   =max(a.%DB_ATTRIB_PRICE%/a.%DB_ATTRIB_NO%*a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%*%M_DB_ATTRIB_REBATE%)
  M_DB_ATTRIB_PRICE_L_GRAD =max(a.%DB_ATTRIB_PRICE%/a.%DB_ATTRIB_NO%/a.%DB_ATTRIB_LENGTH%*a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%*%M_DB_ATTRIB_REBATE%)
;  M_DB_ATTRIB_PRICE_PACK   =max(a.%DB_ATTRIB_PRICE%/a.%DB_ATTRIB_NO%*a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%*%M_DB_ATTRIB_REBATE%)
  M_DB_ATTRIB_PROFCOLLI    =%IF{%GLOBAL_PRICE_PROFILE%=%C_PROFPRICE_UNIT%,%M_DB_ATTRIB_COLLI_UNIT%,}#
                            %IF{%GLOBAL_PRICE_PROFILE%=%C_PROFPRICE_PACK%,%M_DB_ATTRIB_COLLI_PACK%,}
  M_DB_ATTRIB_ACCCOLLI     =%IF{%GLOBAL_PRICE_ACCESS%=%C_ACCPRICE_UNIT%,%M_DB_ATTRIB_COLLI_UNIT%,}#
                            %IF{%GLOBAL_PRICE_ACCESS%=%C_ACCPRICE_GRAD%,%M_DB_ATTRIB_COLLI_GRAD%,}#
                            %IF{%GLOBAL_PRICE_ACCESS%=%C_ACCPRICE_PACK%,%M_DB_ATTRIB_COLLI_PACK%,}
  M_DB_ATTRIB_GASKETCOLLI  =%IF{%GLOBAL_PRICE_ACCESS%=%C_ACCPRICE_UNIT%,%M_DB_ATTRIB_COLLI_UNIT%,}#
                            %IF{%GLOBAL_PRICE_ACCESS%=%C_ACCPRICE_GRAD%,%M_DB_ATTRIB_COLLI_GRAD%,}#
                            %IF{%GLOBAL_PRICE_ACCESS%=%C_ACCPRICE_PACK%,%M_DB_ATTRIB_COLLI_PACK%,}
  M_DB_ATTRIB_REBATE       =%IF{%ORDER_LIST_PER_SUPPLIER_REBATE%,(1-a.%DB_ATTRIB_REBATE%/100),1}
  M_DB_ATTRIB_UNITPRICE    =sum(a.%DB_ATTRIB_PRICE%*%M_DB_ATTRIB_REBATE%)
  M_DB_ATTRIB_GRADPRICE    =max(a.%DB_ATTRIB_PRICE%/a.%DB_ATTRIB_NO%*a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%*%M_DB_ATTRIB_REBATE%)
  M_DB_ATTRIB_GRADPRICE_L  =max(a.%DB_ATTRIB_PRICE%/a.%DB_ATTRIB_NO%/a.%DB_ATTRIB_LENGTH%*a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%*%M_DB_ATTRIB_REBATE%)
  M_DB_ATTRIB_PACKPRICE    =max(a.%DB_ATTRIB_PRICE%/a.%DB_ATTRIB_NO%*a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%*%M_DB_ATTRIB_REBATE%)
  M_DB_ATTRIB_PACKPRICE_L  =max(a.%DB_ATTRIB_PRICE%/a.%DB_ATTRIB_NO%/a.%DB_ATTRIB_LENGTH%*a.%DB_ATTRIB_PACKCOUNT%*a.%DB_ATTRIB_PACKVOLUME%*%M_DB_ATTRIB_REBATE%)
  M_DB_ATTRIB_PROFPRICE    =%IF{%GLOBAL_PRICE_PROFILE%=%C_PROFPRICE_UNIT%,%M_DB_ATTRIB_UNITPRICE%,}#
                            %IF{%GLOBAL_PRICE_PROFILE%=%C_PROFPRICE_PACK%,%M_DB_ATTRIB_PACKPRICE%,}
  M_DB_ATTRIB_ACCPRICE     =%IF{%GLOBAL_PRICE_ACCESS%=%C_ACCPRICE_UNIT%,%M_DB_ATTRIB_UNITPRICE%,}#
                            %IF{%GLOBAL_PRICE_ACCESS%=%C_ACCPRICE_GRAD%,%M_DB_ATTRIB_GRADPRICE%,}#
                            %IF{%GLOBAL_PRICE_ACCESS%=%C_ACCPRICE_PACK%,%M_DB_ATTRIB_PACKPRICE%,}
  M_DB_ATTRIB_GASKETPRICE  =%IF{%GLOBAL_PRICE_ACCESS%=%C_ACCPRICE_UNIT%,%M_DB_ATTRIB_UNITPRICE%,}#
                            %IF{%GLOBAL_PRICE_ACCESS%=%C_ACCPRICE_GRAD%,%M_DB_ATTRIB_GRADPRICE_L%,}#
                            %IF{%GLOBAL_PRICE_ACCESS%=%C_ACCPRICE_PACK%,%M_DB_ATTRIB_PACKPRICE_L%,}

  DB_ATTRIB_COLLI_UNIT     =COLLI_UNIT
  DB_ATTRIB_COLLI_GRAD     =COLLI_GRAD
  DB_ATTRIB_COLLI_PACK     =COLLI_PACK
  DB_ATTRIB_PRICE_UNIT     =PRICE_UNIT
  DB_ATTRIB_PRICE_GRAD     =PRICE_GRAD
  DB_ATTRIB_PRICE_PACK     =PRICE_PACK

fields
  DSP_ATTRIB_GRADVALID      =%EVAL{@%DB_ATTRIB_MINSIZE%>1}   DISPLAY AS LEFT(1)
  DSP_ATTRIB_GASKETGRADVALID=%EVAL{@%DB_ATTRIB_MINSIZE%>0}   DISPLAY AS LEFT(1)
  DSP_ATTRIB_PACKVALID      =%EVAL{@%DB_ATTRIB_PACKSIZE%>1}  DISPLAY AS LEFT(1)
  DSP_ATTRIB_GASKETPACKVALID=%EVAL{@%DB_ATTRIB_PACKSIZE%>0}  DISPLAY AS LEFT(1)
  DSP_ATTRIB_PROFSTOCK      =%EVAL{iif(@%DB_ATTRIB_STOCK%>0,@%DB_ATTRIB_STOCK%,1)} #
                                                             DISPLAY AS INT(10)
  DSP_ATTRIB_ACCSTOCK       =%EVAL{iif(@%DB_ATTRIB_STOCK%>0,@%DB_ATTRIB_STOCK%,1)} #
                                                             DISPLAY AS INT(10)
  DSP_ATTRIB_GASKETSTOCK    =%EVAL{iif(@%DB_ATTRIB_STOCK%>0,@%DB_ATTRIB_STOCK%/1000,1)} #
                                                             DISPLAY AS INT(10)
  DSP_ATTRIB_PROFCALCMODE   =%EVAL{iif(%ORDER_LIST_PER_SUPPLIER_BESTPRICE%,#
                                       iif((%DSP_ATTRIB_PACKVALID% && @%DB_ATTRIB_PRICE_PACK%<@%DB_ATTRIB_PRICE_UNIT%) || %GLOBAL_PRICE_PROFILE%=1,#
                                           %C_CALCMODE_PACK%,%C_CALCMODE_UNIT%),%C_CALCMODE_OLD%)} #
                                                             DISPLAY AS LEFT(1)
  DSP_ATTRIB_ACCCALCMODE    =%EVAL{iif(%ORDER_LIST_PER_SUPPLIER_BESTPRICE%,#
                                       iif(%DSP_ATTRIB_PACKVALID%,%C_CALCMODE_PACK%,#
                                           iif(%DSP_ATTRIB_GRADVALID% && @%DB_ATTRIB_PRICE_GRAD%<@%DB_ATTRIB_PRICE_UNIT%,#
                                               %C_CALCMODE_GRAD%,%C_CALCMODE_UNIT%)),%C_CALCMODE_OLD%)} #
                                                             DISPLAY AS LEFT(1)
  DSP_ATTRIB_GASKETCALCMODE =%EVAL{iif(%ORDER_LIST_PER_SUPPLIER_BESTPRICE%,#
                                       iif(%DSP_ATTRIB_GASKETPACKVALID% && (!%DSP_ATTRIB_GASKETGRADVALID% || @%DB_ATTRIB_PRICE_PACK%<=@%DB_ATTRIB_PRICE_GRAD%),%C_CALCMODE_PACK%,#
                                           iif(%DSP_ATTRIB_GASKETGRADVALID%,#
                                               %C_CALCMODE_GRAD%,%C_CALCMODE_UNIT%)),%C_CALCMODE_OLD%)} #
                                                             DISPLAY AS LEFT(1)
  DSP_ATTRIB_PROFNO         =%EVAL{iif(%DSP_ATTRIB_PROFCALCMODE%=%C_CALCMODE_UNIT%,@%DB_ATTRIB_COLLI_UNIT%/%DSP_ATTRIB_PROFSTOCK%,#
                                   iif(%DSP_ATTRIB_PROFCALCMODE%=%C_CALCMODE_PACK%,@%DB_ATTRIB_COLLI_PACK%/%DSP_ATTRIB_PROFSTOCK%,#
                                   @%DB_ATTRIB_NO%))}        DISPLAY AS %FD_QUANTITY%
  DSP_ATTRIB_ACCNO          =%EVAL{iif(%DSP_ATTRIB_ACCCALCMODE%=%C_CALCMODE_UNIT%,@%DB_ATTRIB_COLLI_UNIT%/%DSP_ATTRIB_ACCSTOCK%,#
                                   iif(%DSP_ATTRIB_ACCCALCMODE%=%C_CALCMODE_GRAD%,@%DB_ATTRIB_COLLI_GRAD%/%DSP_ATTRIB_ACCSTOCK%,#
                                   iif(%DSP_ATTRIB_ACCCALCMODE%=%C_CALCMODE_PACK%,@%DB_ATTRIB_COLLI_PACK%/%DSP_ATTRIB_ACCSTOCK%,#
                                   @%DB_ATTRIB_NO%)))}       DISPLAY AS %FD_QUANTITY%
  DSP_ATTRIB_GASKETNO       =%EVAL{iif(%DSP_ATTRIB_GASKETCALCMODE%=%C_CALCMODE_UNIT%,@%DB_ATTRIB_COLLI_UNIT%/%DSP_ATTRIB_GASKETSTOCK%,#
                                   iif(%DSP_ATTRIB_GASKETCALCMODE%=%C_CALCMODE_GRAD%,@%DB_ATTRIB_COLLI_GRAD%/%DSP_ATTRIB_GASKETSTOCK%,#
                                   iif(%DSP_ATTRIB_GASKETCALCMODE%=%C_CALCMODE_PACK%,@%DB_ATTRIB_COLLI_PACK%/%DSP_ATTRIB_GASKETSTOCK%,#
                                   @%DB_ATTRIB_NO%)))}       DISPLAY AS %FD_MEASURE1%
  DSP_ATTRIB_GASKETQTY      =%EVAL{iif(%DSP_ATTRIB_GASKETCALCMODE%=%C_CALCMODE_UNIT%,@%DB_ATTRIB_COLLI_UNIT%/%DSP_ATTRIB_GASKETSTOCK%,#
                                   iif(%DSP_ATTRIB_GASKETCALCMODE%=%C_CALCMODE_GRAD%,@%DB_ATTRIB_COLLI_GRAD%/%DSP_ATTRIB_GASKETSTOCK%,#
                                   iif(%DSP_ATTRIB_GASKETCALCMODE%=%C_CALCMODE_PACK%,@%DB_ATTRIB_COLLI_PACK%/%DSP_ATTRIB_GASKETSTOCK%,#
                                   @%DB_ATTRIB_NO%)))}       DISPLAY AS %FD_QUANTITY%
  DSP_ATTRIB_PROFPRICE      =%EVAL{iif(%DSP_ATTRIB_PROFCALCMODE%=%C_CALCMODE_UNIT%,@%DB_ATTRIB_PRICE_UNIT%,#
                                   iif(%DSP_ATTRIB_PROFCALCMODE%=%C_CALCMODE_PACK%,@%DB_ATTRIB_PRICE_PACK%,#
                                   @%DB_ATTRIB_PRICE%))}     DISPLAY AS %FD_PRICE%
  DSP_ATTRIB_ACCPRICE       =%EVAL{iif(%DSP_ATTRIB_ACCCALCMODE%=%C_CALCMODE_UNIT%,@%DB_ATTRIB_PRICE_UNIT%,#
                                   iif(%DSP_ATTRIB_ACCCALCMODE%=%C_CALCMODE_GRAD%,@%DB_ATTRIB_PRICE_GRAD%,#
                                   iif(%DSP_ATTRIB_ACCCALCMODE%=%C_CALCMODE_PACK%,@%DB_ATTRIB_PRICE_PACK%,#
                                   @%DB_ATTRIB_PRICE%)))}    DISPLAY AS %FD_PRICE%
  DSP_ATTRIB_GASKETPRICE    =%EVAL{iif(%DSP_ATTRIB_GASKETCALCMODE%=%C_CALCMODE_UNIT%,@%DB_ATTRIB_PRICE_UNIT%,#
                                   iif(%DSP_ATTRIB_GASKETCALCMODE%=%C_CALCMODE_GRAD%,@%DB_ATTRIB_PRICE_GRAD%,#
                                   iif(%DSP_ATTRIB_GASKETCALCMODE%=%C_CALCMODE_PACK%,@%DB_ATTRIB_PRICE_PACK%,#
                                   @%DB_ATTRIB_PRICE%)))}    DISPLAY AS %FD_PRICE%

  DSP_ATTRIB_PROFCOLLI      =@%DB_ATTRIB_RATE%               DISPLAY AS %FD_QUANTITY%
  DSP_ATTRIB_ACCCOLLI       =@%DB_ATTRIB_RATE%               DISPLAY AS %FD_QUANTITY%
  DSP_ATTRIB_GASKETCOLLI    =@%DB_ATTRIB_RATE%               DISPLAY AS %FD_QUANTITY%
  DSP_ATTRIB_ORDERPRICE     =@%DB_ATTRIB_PRICE%              DISPLAY AS %FD_PRICE%
  DSP_ATTRIB_NO_AS_LENGTH   =@%DB_ATTRIB_NO%                 DISPLAY AS %FD_MEASURE1%
  DSP_ATTRIB_PACKPIECES     =@%DB_ATTRIB_PACKVOLUME%         DISPLAY AS %FD_PIECES%
  DSP_ATTRIB_PACKLENGTH     =@%DB_ATTRIB_PACKVOLUME%         DISPLAY AS %FD_MEASURE_COLLI%
  DSP_ATTRIB_PEAKLENGTH     =@%DB_ATTRIB_RATE%               DISPLAY AS %FD_MEASURE1%
  DSP_ATTRIB_ERRORLENGTH    =%EVAL{@%DB_ATTRIB_LENGTH%*1000} DISPLAY AS %FD_MEASURE%
  DSP_ATTRIB_PRICE_SUBTOTAL = %SUBTOTAL_ORDERLIST%           DISPLAY AS %FD_TOTPRICE%
  DSP_ATTRIB_PRICE_SUM      =@%DB_ATTRIB_PRICE%              DISPLAY AS %FD_TOTPRICE%
  DSP_ATTRIB_PRICE_TOTAL    = %TOTAL_ORDERLIST%              DISPLAY AS %FD_TOTPRICE%
  M_B_TAG                   =%IF{@%DB_ATTRIB_ERROR%,<i>,}    DISPLAY AS LEFT(3)
  M_E_TAG                   =%IF{@%DB_ATTRIB_ERROR%,</i>,}   DISPLAY AS LEFT(4)

using %REPORTNAME%_B_PROJECT_0.%REPORTTYPE%%IF{%REPORTTYPE%=J,,%LANGUAGE%}

next

report
  select   min(a.%DB_ATTRIB_BATCH%) as %DB_ATTRIB_BATCH%,
           sum(a.%DB_ATTRIB_NO%) as %DB_ATTRIB_NO%,
           a.%DB_ATTRIB_SERIE%,
           min(a.%DB_ATTRIB_ARTICLECODE%) as %DB_ATTRIB_ARTICLECODE%,
           min(a.%DB_ATTRIB_VARIETYDESC%) as %DB_ATTRIB_VARIETYDESC%,
           min(a.%DB_ATTRIB_ACCDESC%) as %DB_ATTRIB_ACCDESC%,
           a.%DB_ATTRIB_LENGTH%,
           %M_DB_ATTRIB_COLLI_UNIT% as %DB_ATTRIB_COLLI_UNIT%,
           1                        as %DB_ATTRIB_COLLI_GRAD%,
           %M_DB_ATTRIB_COLLI_PACK% as %DB_ATTRIB_COLLI_PACK%,
           %M_DB_ATTRIB_PRICE_UNIT% as %DB_ATTRIB_PRICE_UNIT%,
           0                        as %DB_ATTRIB_PRICE_GRAD%,
           %M_DB_ATTRIB_PRICE_PACK% as %DB_ATTRIB_PRICE_PACK%,
           %M_DB_ATTRIB_PROFPRICE% as %DB_ATTRIB_PRICE%,
           %M_DB_ATTRIB_PROFCOLLI% as %DB_ATTRIB_RATE%,
           1                           as %DB_ATTRIB_MINSIZE%,
           min(a.%DB_ATTRIB_PACKSIZE%) as %DB_ATTRIB_PACKSIZE%,
           min(a.%DB_ATTRIB_ITMPRICE%) as %DB_ATTRIB_ITMPRICE%,
           0                           as %DB_ATTRIB_QTYPRICE%,
           min(a.%DB_ATTRIB_SETPRICE%) as %DB_ATTRIB_SETPRICE%,
           a.%DB_ATTRIB_PACKTYPE%,
           a.%DB_ATTRIB_PACKCOUNT%,
           a.%DB_ATTRIB_PACKVOLUME%,
           min(a.%DB_ATTRIB_VARIETY%) as %DB_ATTRIB_VARIETY%,
           min(a.%DB_ATTRIB_REBATE%) as %DB_ATTRIB_REBATE%,
           min(a.%DB_ATTRIB_STOCK%) as %DB_ATTRIB_STOCK%,
           a.%DB_ATTRIB_ACC%,
           a.%DB_ATTRIB_SUPPLIER%,
           min(a.%DB_ATTRIB_TYPE%) as %DB_ATTRIB_TYPE%,
           min(a.%DB_ATTRIB_ERROR%) as %DB_ATTRIB_ERROR%,
           min(t.%DB_TEXT_CLIENT%) as %DB_TEXT_CLIENT%,
           min(t.%DB_TEXT_CONTACT%) as %DB_TEXT_CONTACT%,
           min(t.%DB_TEXT_STREET%) as %DB_TEXT_STREET%,
           min(t.%DB_TEXT_COUNTRY%) as %DB_TEXT_COUNTRY%,
           min(t.%DB_TEXT_ZIP%) as %DB_TEXT_ZIP%,
           min(t.%DB_TEXT_PLACE%) as %DB_TEXT_PLACE%,
           min(t.%DB_TEXT_PHONE%) as %DB_TEXT_PHONE%,
           min(t.%DB_TEXT_TELEFAX%) as %DB_TEXT_TELEFAX%,
           min(t.%DB_TEXT_NAME%) as %DB_TEXT_NAME%,
           min(t.%DB_TEXT_BEGIN%) as %DB_TEXT_BEGIN%
  from     %TBL_ATTRIB% a, %TBL_TEXT% t
  where    a.%DB_ATTRIB_SUPPLIER% = t.%DB_TEXT_CODE%
  and      a.%DB_ATTRIB_TYPE% = -1
  and      %DB_ATTRIB_DEPNO% not in %ORDER_LIST_PER_SUPPLIER_FILTER_PIECE%
  group by a.%DB_ATTRIB_SUPPLIER%, a.%DB_ATTRIB_ACC%, a.%DB_ATTRIB_VARIETY%, a.%DB_ATTRIB_SERIE%, a.%DB_ATTRIB_LENGTH%,
           a.%DB_ATTRIB_PACKTYPE%, a.%DB_ATTRIB_PACKCOUNT%, a.%DB_ATTRIB_PACKVOLUME%
  having   count(*) > 0

calculate
  sum(%DB_ATTRIB_PRICE%) as %DB_ATTRIB_PRICE% break on %DB_ATTRIB_SUPPLIER%

using %REPORTNAME%_B_PROJECT_1.%REPORTTYPE%%IF{%REPORTTYPE%=J,,%LANGUAGE%}

next

report
  select   min(a.%DB_ATTRIB_BATCH%) as %DB_ATTRIB_BATCH%,
           sum(a.%DB_ATTRIB_NO%) as %DB_ATTRIB_NO%,
           a.%DB_ATTRIB_SERIE%,
           min(a.%DB_ATTRIB_ARTICLECODE%) as %DB_ATTRIB_ARTICLECODE%,
           min(a.%DB_ATTRIB_VARIETYDESC%) as %DB_ATTRIB_VARIETYDESC%,
           min(a.%DB_ATTRIB_ACCDESC%) as %DB_ATTRIB_ACCDESC%,
           sum(a.%DB_ATTRIB_LENGTH%) as %DB_ATTRIB_LENGTH%,
           %M_DB_ATTRIB_COLLI_UNIT% as %DB_ATTRIB_COLLI_UNIT%,
           %M_DB_ATTRIB_COLLI_GRAD% as %DB_ATTRIB_COLLI_GRAD%,
           %M_DB_ATTRIB_COLLI_PACK% as %DB_ATTRIB_COLLI_PACK%,
           %M_DB_ATTRIB_PRICE_UNIT% as %DB_ATTRIB_PRICE_UNIT%,
           %M_DB_ATTRIB_PRICE_GRAD% as %DB_ATTRIB_PRICE_GRAD%,
           %M_DB_ATTRIB_PRICE_PACK% as %DB_ATTRIB_PRICE_PACK%,
           %M_DB_ATTRIB_ACCPRICE% as %DB_ATTRIB_PRICE%,
           %M_DB_ATTRIB_ACCCOLLI% as %DB_ATTRIB_RATE%,
           min(a.%DB_ATTRIB_MINSIZE%)  as %DB_ATTRIB_MINSIZE%,
           min(a.%DB_ATTRIB_PACKSIZE%) as %DB_ATTRIB_PACKSIZE%,
           min(a.%DB_ATTRIB_ITMPRICE%) as %DB_ATTRIB_ITMPRICE%,
           min(a.%DB_ATTRIB_QTYPRICE%) as %DB_ATTRIB_QTYPRICE%,
           min(a.%DB_ATTRIB_SETPRICE%) as %DB_ATTRIB_SETPRICE%,
           a.%DB_ATTRIB_PACKTYPE%,
           a.%DB_ATTRIB_PACKCOUNT%,
           a.%DB_ATTRIB_PACKVOLUME%,
           min(a.%DB_ATTRIB_VARIETY%) as %DB_ATTRIB_VARIETY%,
           min(a.%DB_ATTRIB_REBATE%) as %DB_ATTRIB_REBATE%,
           min(a.%DB_ATTRIB_STOCK%) as %DB_ATTRIB_STOCK%,
           a.%DB_ATTRIB_ACC%,
           a.%DB_ATTRIB_SUPPLIER%,
           min(a.%DB_ATTRIB_TYPE%) as %DB_ATTRIB_TYPE%,
           min(t.%DB_TEXT_CLIENT%) as %DB_TEXT_CLIENT%,
           min(t.%DB_TEXT_CONTACT%) as %DB_TEXT_CONTACT%,
           min(t.%DB_TEXT_STREET%) as %DB_TEXT_STREET%,
           min(t.%DB_TEXT_COUNTRY%) as %DB_TEXT_COUNTRY%,
           min(t.%DB_TEXT_ZIP%) as %DB_TEXT_ZIP%,
           min(t.%DB_TEXT_PLACE%) as %DB_TEXT_PLACE%,
           min(t.%DB_TEXT_PHONE%) as %DB_TEXT_PHONE%,
           min(t.%DB_TEXT_TELEFAX%) as %DB_TEXT_TELEFAX%,
           min(t.%DB_TEXT_NAME%) as %DB_TEXT_NAME%,
           min(t.%DB_TEXT_BEGIN%) as %DB_TEXT_BEGIN%
  from     %TBL_ATTRIB% a, %TBL_TEXT% t
  where    a.%DB_ATTRIB_SUPPLIER% = t.%DB_TEXT_CODE%
  and      a.%DB_ATTRIB_TYPE% = -2
  and      %DB_ATTRIB_DEPNO% not in %ORDER_LIST_PER_SUPPLIER_FILTER_ATTRIB%
  group by a.%DB_ATTRIB_SUPPLIER%, a.%DB_ATTRIB_ACC%, a.%DB_ATTRIB_VARIETY%, a.%DB_ATTRIB_SERIE%,
           a.%DB_ATTRIB_PACKTYPE%, a.%DB_ATTRIB_PACKCOUNT%, a.%DB_ATTRIB_PACKVOLUME%
  having   count(*) > 0
  and      sum(a.%DB_ATTRIB_NO%) > 0

calculate
  sum(%DB_ATTRIB_PRICE%) as %DB_ATTRIB_PRICE%, sum(%DB_ATTRIB_LENGTH%) break on %DB_ATTRIB_SUPPLIER%

using %REPORTNAME%_B_PROJECT_2.%REPORTTYPE%%IF{%REPORTTYPE%=J,,%LANGUAGE%}

next

report
  select   min(a.%DB_ATTRIB_BATCH%) as %DB_ATTRIB_BATCH%,
           sum(a.%DB_ATTRIB_LENGTH% * a.%DB_ATTRIB_NO%) as %DB_ATTRIB_NO%,
           a.%DB_ATTRIB_SERIE%,
           min(a.%DB_ATTRIB_ARTICLECODE%) as %DB_ATTRIB_ARTICLECODE%,
           min(a.%DB_ATTRIB_VARIETYDESC%) as %DB_ATTRIB_VARIETYDESC%,
           min(a.%DB_ATTRIB_ACCDESC%) as %DB_ATTRIB_ACCDESC%,
           sum(a.%DB_ATTRIB_LENGTH%) as %DB_ATTRIB_LENGTH%,
           %M_DB_ATTRIB_COLLI_L_UNIT% as %DB_ATTRIB_COLLI_UNIT%,
           %M_DB_ATTRIB_COLLI_L_GRAD% as %DB_ATTRIB_COLLI_GRAD%,
           %M_DB_ATTRIB_COLLI_PACK% as %DB_ATTRIB_COLLI_PACK%,
           %M_DB_ATTRIB_PRICE_L_UNIT% as %DB_ATTRIB_PRICE_UNIT%,
           %M_DB_ATTRIB_PRICE_L_GRAD% as %DB_ATTRIB_PRICE_GRAD%,
           %M_DB_ATTRIB_PRICE_PACK% as %DB_ATTRIB_PRICE_PACK%,
           %M_DB_ATTRIB_GASKETPRICE% as %DB_ATTRIB_PRICE%,
           %M_DB_ATTRIB_GASKETCOLLI% as %DB_ATTRIB_RATE%,
           max(%DB_ATTRIB_PCKPEAKSIZE%) as %DB_ATTRIB_PCKPEAKSIZE%,
           min(a.%DB_ATTRIB_MINSIZE%)  as %DB_ATTRIB_MINSIZE%,
           min(a.%DB_ATTRIB_PACKSIZE%) as %DB_ATTRIB_PACKSIZE%,
           min(a.%DB_ATTRIB_ITMPRICE%) as %DB_ATTRIB_ITMPRICE%,
           min(a.%DB_ATTRIB_QTYPRICE%) as %DB_ATTRIB_QTYPRICE%,
           min(a.%DB_ATTRIB_SETPRICE%) as %DB_ATTRIB_SETPRICE%,
           a.%DB_ATTRIB_PACKTYPE%,
           a.%DB_ATTRIB_PACKCOUNT%,
           a.%DB_ATTRIB_PACKVOLUME%,
           min(a.%DB_ATTRIB_VARIETY%) as %DB_ATTRIB_VARIETY%,
           min(a.%DB_ATTRIB_REBATE%) as %DB_ATTRIB_REBATE%,
           min(a.%DB_ATTRIB_STOCK%) as %DB_ATTRIB_STOCK%,
           a.%DB_ATTRIB_ACC%,
           a.%DB_ATTRIB_SUPPLIER%,
           min(a.%DB_ATTRIB_TYPE%) as %DB_ATTRIB_TYPE%,
           min(t.%DB_TEXT_CLIENT%) as %DB_TEXT_CLIENT%,
           min(t.%DB_TEXT_CONTACT%) as %DB_TEXT_CONTACT%,
           min(t.%DB_TEXT_STREET%) as %DB_TEXT_STREET%,
           min(t.%DB_TEXT_COUNTRY%) as %DB_TEXT_COUNTRY%,
           min(t.%DB_TEXT_ZIP%) as %DB_TEXT_ZIP%,
           min(t.%DB_TEXT_PLACE%) as %DB_TEXT_PLACE%,
           min(t.%DB_TEXT_PHONE%) as %DB_TEXT_PHONE%,
           min(t.%DB_TEXT_TELEFAX%) as %DB_TEXT_TELEFAX%,
           min(t.%DB_TEXT_NAME%) as %DB_TEXT_NAME%,
           min(t.%DB_TEXT_BEGIN%) as %DB_TEXT_BEGIN%
  from     %TBL_ATTRIB% a, %TBL_TEXT% t
  where    a.%DB_ATTRIB_SUPPLIER% = t.%DB_TEXT_CODE%
  and      a.%DB_ATTRIB_TYPE% = -3
  and      %DB_ATTRIB_DEPNO% not in %ORDER_LIST_PER_SUPPLIER_FILTER_GASKET%
  group by a.%DB_ATTRIB_SUPPLIER%, a.%DB_ATTRIB_ACC%, a.%DB_ATTRIB_VARIETY%, a.%DB_ATTRIB_SERIE%,
           a.%DB_ATTRIB_PACKTYPE%, a.%DB_ATTRIB_PACKCOUNT%, a.%DB_ATTRIB_PACKVOLUME%
  having   count(*) > 0
  and      sum(a.%DB_ATTRIB_LENGTH% * a.%DB_ATTRIB_NO%) > 0

calculate
  sum(%DB_ATTRIB_PRICE%) as %DB_ATTRIB_PRICE%, sum(%DB_ATTRIB_LENGTH%) break on %DB_ATTRIB_SUPPLIER%

using %REPORTNAME%_B_PROJECT_3.%REPORTTYPE%%IF{%REPORTTYPE%=J,,%LANGUAGE%}

