; Groep/blad

defines
;needed by JoPPS.QIF
  NO_COLORS     =0

include JoPPS.QIF
include Piece.QIF
include Attrib.QIF
include Glass.QIF
include Extra.QIF
include Annex.QIF

defines
  C_LOUTPUT_ABS        =0
  C_LOUTPUT_MAX        =1
  C_LOUTPUT_MIN        =2
  C_LOUTPUT_S1         =3
  C_LOUTPUT_S2         =4
  
  C_VIEWPOINT_LEFT     =1
  C_VIEWPOINT_RIGHT    =2
  C_VIEWPOINT_BOTTOM   =3
  C_VIEWPOINT_TOP      =4

  DB_PIECE_LOUTPUT =%IF{%ASSEMBLY_PER_PAGE_LENGTH%=%C_LOUTPUT_ABS%,%DB_PIECE_LABS%,#
                    %IF{%ASSEMBLY_PER_PAGE_LENGTH%=%C_LOUTPUT_MAX%,%DB_PIECE_LMAX%,#
                    %IF{%ASSEMBLY_PER_PAGE_LENGTH%=%C_LOUTPUT_MIN%,%DB_PIECE_LMIN%,#
                    %IF{%ASSEMBLY_PER_PAGE_LENGTH%=%C_LOUTPUT_S1%,%DB_PIECE_LCUT1%,%DB_PIECE_LCUT2%}}}}
  DB_PIECE_AB      =%IF{%ASSEMBLY_PER_PAGE_LENGTH%=%C_LOUTPUT_S1%,%DB_PIECE_ANGLEB1%,#
                    %IF{%ASSEMBLY_PER_PAGE_LENGTH%=%C_LOUTPUT_S2%,%DB_PIECE_ANGLEB2%,%DB_PIECE_ANGLEB%}}
  DB_PIECE_AE      =%IF{%ASSEMBLY_PER_PAGE_LENGTH%=%C_LOUTPUT_S1%,%DB_PIECE_ANGLEE1%,#
                    %IF{%ASSEMBLY_PER_PAGE_LENGTH%=%C_LOUTPUT_S2%,%DB_PIECE_ANGLEE2%,%DB_PIECE_ANGLEE%}}

fields
  SH_VIEW_LEFT      ="SHOWVIEWPOINT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;;%ASSEMBLY_PER_PAGE_SCENARIO%;%C_VIEWPOINT_LEFT%"   DISPLAY AS EXTERNAL   
  SH_VIEW_RIGHT     ="SHOWVIEWPOINT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;;%ASSEMBLY_PER_PAGE_SCENARIO%;%C_VIEWPOINT_RIGHT%"  DISPLAY AS EXTERNAL   
  SH_VIEW_BOTTOM    ="SHOWVIEWPOINT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;;%ASSEMBLY_PER_PAGE_SCENARIO%;%C_VIEWPOINT_BOTTOM%" DISPLAY AS EXTERNAL   
  SH_VIEW_TOP       ="SHOWVIEWPOINT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;;%ASSEMBLY_PER_PAGE_SCENARIO%;%C_VIEWPOINT_TOP%"    DISPLAY AS EXTERNAL   
  
  DSP_VIEWLEFT      ="VIEWPNT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;;%ASSEMBLY_PER_PAGE_WIDTH%;%ASSEMBLY_PER_PAGE_HEIGHT%;%ASSEMBLY_PER_PAGE_SIZE%;#
                      %C_VIEWPOINT_LEFT%;%ASSEMBLY_PER_PAGE_MEASURES%;%ASSEMBLY_PER_PAGE_OUTLINECOLOR%;%ASSEMBLY_PER_PAGE_SCALE%;;#
                      %ASSEMBLY_PER_PAGE_VIEWPOINT%;%GLOBAL_OUTLINERESOL%;%ASSEMBLY_PER_PAGE_SCENARIO%" DISPLAY AS IMGREF(0,0,0)
  DSP_VIEWRIGHT     ="VIEWPNT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;;%ASSEMBLY_PER_PAGE_WIDTH%;%ASSEMBLY_PER_PAGE_HEIGHT%;%ASSEMBLY_PER_PAGE_SIZE%;#
                      %C_VIEWPOINT_RIGHT%;%ASSEMBLY_PER_PAGE_MEASURES%;%ASSEMBLY_PER_PAGE_OUTLINECOLOR%;%ASSEMBLY_PER_PAGE_SCALE%;;#
                      %ASSEMBLY_PER_PAGE_VIEWPOINT%;%GLOBAL_OUTLINERESOL%;%ASSEMBLY_PER_PAGE_SCENARIO%" DISPLAY AS IMGREF(0,0,0)
  DSP_VIEWBOTTOM    ="VIEWPNT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;;%ASSEMBLY_PER_PAGE_WIDTH%;%ASSEMBLY_PER_PAGE_HEIGHT%;%ASSEMBLY_PER_PAGE_SIZE%;#
                      %C_VIEWPOINT_BOTTOM%;%ASSEMBLY_PER_PAGE_MEASURES%;%ASSEMBLY_PER_PAGE_OUTLINECOLOR%;%ASSEMBLY_PER_PAGE_SCALE%;;#
                      %ASSEMBLY_PER_PAGE_VIEWPOINT%;%GLOBAL_OUTLINERESOL%;%ASSEMBLY_PER_PAGE_SCENARIO%" DISPLAY AS IMGREF(0,0,0)
  DSP_VIEWTOP       ="VIEWPNT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;;%ASSEMBLY_PER_PAGE_WIDTH%;%ASSEMBLY_PER_PAGE_HEIGHT%;%ASSEMBLY_PER_PAGE_SIZE%;#
                      %C_VIEWPOINT_TOP%;%ASSEMBLY_PER_PAGE_MEASURES%;%ASSEMBLY_PER_PAGE_OUTLINECOLOR%;%ASSEMBLY_PER_PAGE_SCALE%;;#
                      %ASSEMBLY_PER_PAGE_VIEWPOINT%;%GLOBAL_OUTLINERESOL%;%ASSEMBLY_PER_PAGE_SCENARIO%" DISPLAY AS IMGREF(0,0,0)
  DSP_DRAWASSEMBLY  ="DRAWING:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;;%ASSEMBLY_PER_PAGE_WIDTH%;%ASSEMBLY_PER_PAGE_HEIGHT%;#
                      %ASSEMBLY_PER_PAGE_MEASURES%;%ASSEMBLY_PER_PAGE_OUTLINECOLOR%;%ASSEMBLY_PER_PAGE_SCALE%;;;;;;#
                      %ASSEMBLY_PER_PAGE_VIEWPOINT%;%GLOBAL_OUTLINERESOL%;;%ASSEMBLY_PER_PAGE_SCENARIO%;;%BATCHTYPE%;#
                      %ASSEMBLY_PER_PAGE_REFFRAME%;%ASSEMBLY_PER_PAGE_REFVENT%" DISPLAY AS IMGREF(0,0,0)
  DSP_SCALE         ="SCALE:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;;#
                      %ASSEMBLY_PER_PAGE_WIDTH%;%ASSEMBLY_PER_PAGE_HEIGHT%;#
                      %ASSEMBLY_PER_PAGE_MEASURES%;%ASSEMBLY_PER_PAGE_SCALE%;#
                      %GLOBAL_OUTLINERESOL%;%ASSEMBLY_PER_PAGE_SCENARIO%" DISPLAY AS EXTERNAL
  DSP_DRAWFILL      ="FILLING:@%DB_GLASS_PROJECT%;@%DB_GLASS_ASSEMBLY%;@%DB_GLASS_FRAME%;#
                      @%DB_GLASS_OPENING%;@%DB_GLASS_VENTPART%;@%DB_GLASS_VENTOPENING%;#
                      %ASSEMBLY_PER_PAGE_FILLING_WIDTH%;%ASSEMBLY_PER_PAGE_FILLING_HEIGHT%;%GLOBAL_CROSS_DIMENSION%;#
                      %ASSEMBLY_PER_PAGE_FILLING_OUTLINECOLOR%;;;;%GLOBAL_OUTLINERESOL%;#
                      %ASSEMBLY_PER_PAGE_FILLING_SCENARIO%;@%DB_GLASS_INDEX%;@%DB_GLASS_FILLING%;#
                      %ASSEMBLY_PER_PAGE_CROSSES_SHOWCROSS%;%ASSEMBLY_PER_PAGE_CROSSES_DIMENSION%;#
                      %ASSEMBLY_PER_PAGE_CROSSES_REFERENCE%;%ASSEMBLY_PER_PAGE_CROSSES_SHOWSIZES%" DISPLAY AS IMGREF(0,0,0)
  DSP_PIECE_LOUTPUT =@%DB_PIECE_LOUTPUT% DISPLAY AS %FD_MEASURE%
  DSP_PIECE_AB      =@%DB_PIECE_AB%      DISPLAY AS %FD_ANGLE%
  DSP_PIECE_AE      =@%DB_PIECE_AE%      DISPLAY AS %FD_ANGLE%

using %FILE_HEADER_PROJECT%

next

using %FILE_BARCODE%

next

using %NAME%_drw.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_PIECE_BATCH%) as %DB_PIECE_BATCH%,
           sum(%DB_PIECE_NO%) as %DB_PIECE_NO%,
           %DB_PIECE_SERIE%,
           min(%DB_PIECE_PROFILEDESC%) as %DB_PIECE_PROFILEDESC%,
           min(%DB_PIECE_LABS%) as %DB_PIECE_LABS%,
           min(%DB_PIECE_LMAX%) as %DB_PIECE_LMAX%,
           min(%DB_PIECE_LMIN%) as %DB_PIECE_LMIN%,
           min(%DB_PIECE_LCUT1%) as %DB_PIECE_LCUT1%,
           min(%DB_PIECE_LCUT2%) as %DB_PIECE_LCUT2%,
           min(%DB_PIECE_ANGLEB%) as %DB_PIECE_ANGLEB%,
           min(%DB_PIECE_ANGLEE%) as %DB_PIECE_ANGLEE%,
           min(%DB_PIECE_ANGLESB%) as %DB_PIECE_ANGLESB%,
           min(%DB_PIECE_ANGLESE%) as %DB_PIECE_ANGLESE%,
           min(%DB_PIECE_ANGLEB1%) as %DB_PIECE_ANGLEB1%,
           min(%DB_PIECE_ANGLEE1%) as %DB_PIECE_ANGLEE1%,
           min(%DB_PIECE_ANGLEB2%) as %DB_PIECE_ANGLEB2%,
           min(%DB_PIECE_ANGLEE2%) as %DB_PIECE_ANGLEE2%,
           min(%DB_PIECE_ARCRADIUS%) as %DB_PIECE_ARCRADIUS%,
           min(%DB_PIECE_ARCWIDTH%) as %DB_PIECE_ARCWIDTH%,
           min(%DB_PIECE_ARCHEIGHT%) as %DB_PIECE_ARCHEIGHT%,
           min(%DB_PIECE_VARIETYDESC%) as %DB_PIECE_VARIETYDESC%,
           min(%DB_PIECE_ARTICLECODE%) as %DB_PIECE_ARTICLECODE%,
           %DB_PIECE_PRODUCT%,
           %DB_PIECE_PROJECT%,
           %DB_PIECE_ASSEMBLY%,
           %DB_PIECE_FRAME%,
           min(%DB_PIECE_OPENING%) as %DB_PIECE_OPENING%,
           min(%DB_PIECE_VENTPART%) as %DB_PIECE_VENTPART%,
           min(%DB_PIECE_SYSTEM%) as %DB_PIECE_SYSTEM%,
           min(%DB_PIECE_PROFILE%) as %DB_PIECE_PROFILE%,
           min(%DB_PIECE_RACK%) as %DB_PIECE_RACK%,
           %DB_PIECE_VARIETY%,
           min(%DB_PIECE_RGB%) as %DB_PIECE_RGB%,
           min(%DB_PIECE_BTYPE%) as %DB_PIECE_BTYPE%,
           min(%DB_PIECE_ID%) as %DB_PIECE_ID%,
           %DB_PIECE_CFCHAR%,
           %DB_PIECE_PIECENO%,
           %DB_PIECE_POSITION%
  from     %TBL_PIECE%
  where    %DB_PIECE_PROJECT%  like '%PROJECT_TEXT%'
  and      %DB_PIECE_ASSEMBLY% like '%ASSEMBLY_TEXT%'
  and      %DB_PIECE_DEPNO% not in %ASSEMBLY_PER_PAGE_FILTER_PIECE%
  and      %DB_PIECE_NO% > 0
  and		%DB_PIECE_SPLIT%<>-2
  and      ((%SORTPERBTYPE%=0) or ((%SORTPERBTYPE%<>0) and (%DB_PIECE_BTYPE%=%BTYPE%)))
  group by %DB_PIECE_PROJECT%, %DB_PIECE_ASSEMBLY%, %DB_PIECE_FRAME%,
           %DB_PIECE_PRODUCT%, %DB_PIECE_VARIETY%, %DB_PIECE_SERIE%,
           %DB_PIECE_SYSTEM%, %DB_PIECE_PROFILE%, %DB_PIECE_CFCHAR%,
           %DB_PIECE_PIECENO%, %DB_PIECE_LOUTPUT%, %DB_PIECE_AB%, %DB_PIECE_AE%,
           %DB_PIECE_POSITION%
  having   count(*) > 0

calculate
  break on %DB_PIECE_FRAME%

using %NAME%_1.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_ATTRIB_BATCH%) as %DB_ATTRIB_BATCH%,
           sum(%DB_ATTRIB_NO%) as %DB_ATTRIB_NO%,
           %DB_ATTRIB_SERIE%,
           min(%DB_ATTRIB_ACCDESC%) as %DB_ATTRIB_ACCDESC%,
           sum(%DB_ATTRIB_LENGTH%) as %DB_ATTRIB_LENGTH%,
           sum(%DB_ATTRIB_PRICE%) as %DB_ATTRIB_PRICE%,
           %DB_ATTRIB_VARIETY%,
           min(%DB_ATTRIB_RGB%) as %DB_ATTRIB_RGB%,
           min(%DB_ATTRIB_BTYPE%) as %DB_ATTRIB_BTYPE%,
           min(%DB_ATTRIB_VARIETYDESC%) as %DB_ATTRIB_VARIETYDESC%,
           min(%DB_ATTRIB_ARTICLECODE%) as %DB_ATTRIB_ARTICLECODE%,
           %DB_ATTRIB_ACC%,
           %DB_ATTRIB_PROJECT%,
           %DB_ATTRIB_ASSEMBLY%,
           %DB_ATTRIB_FRAME%,
           min(%DB_ATTRIB_OPENING%) as %DB_ATTRIB_OPENING%,
           min(%DB_ATTRIB_VENTPART%) as %DB_ATTRIB_VENTPART%,
           %DB_ATTRIB_POSITION%
  from     %TBL_ATTRIB%
  where    %DB_ATTRIB_PROJECT%  like '%PROJECT_TEXT%'
  and      %DB_ATTRIB_ASSEMBLY% like '%ASSEMBLY_TEXT%'
  and      %DB_ATTRIB_TYPE% = 1
  and      %DB_ATTRIB_DEPNO% not in %ASSEMBLY_PER_PAGE_FILTER_ATTRIB%
  and      ((%SORTPERBTYPE%=0) or ((%SORTPERBTYPE%<>0) and (%DB_ATTRIB_BTYPE%=%BTYPE%)))
  group by %DB_ATTRIB_PROJECT%, %DB_ATTRIB_ASSEMBLY%, %DB_ATTRIB_FRAME%,
           %DB_ATTRIB_ACC%, %DB_ATTRIB_VARIETY%, %DB_ATTRIB_SERIE%,
           %DB_ATTRIB_POSITION%
  having   count(*) > 0
  and      sum(%DB_ATTRIB_NO%) > 0

calculate
  break on %DB_ATTRIB_FRAME%

using %NAME%_2.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_ATTRIB_BATCH%) as %DB_ATTRIB_BATCH%,
           min(%DB_ATTRIB_NO%/%DB_ATTRIB_NO%) as %DB_ATTRIB_NO%,
           %DB_ATTRIB_SERIE%,
           min(%DB_ATTRIB_ACCDESC%) as %DB_ATTRIB_ACCDESC%,
           sum(%DB_ATTRIB_LENGTH%*%DB_ATTRIB_NO%) as %DB_ATTRIB_LENGTH%,
           sum(%DB_ATTRIB_PRICE%) as %DB_ATTRIB_PRICE%,
           %DB_ATTRIB_VARIETY%,
           min(%DB_ATTRIB_RGB%) as %DB_ATTRIB_RGB%,
           min(%DB_ATTRIB_BTYPE%) as %DB_ATTRIB_BTYPE%,
           min(%DB_ATTRIB_VARIETYDESC%) as %DB_ATTRIB_VARIETYDESC%,
           min(%DB_ATTRIB_ARTICLECODE%) as %DB_ATTRIB_ARTICLECODE%,
           %DB_ATTRIB_ACC%,
           %DB_ATTRIB_PROJECT%,
           %DB_ATTRIB_ASSEMBLY%,
           %DB_ATTRIB_FRAME%,
           min(%DB_ATTRIB_OPENING%) as %DB_ATTRIB_OPENING%,
           min(%DB_ATTRIB_VENTPART%) as %DB_ATTRIB_VENTPART%,
           %DB_ATTRIB_POSITION%
  from     %TBL_ATTRIB%
  where    %DB_ATTRIB_PROJECT%  like '%PROJECT_TEXT%'
  and      %DB_ATTRIB_ASSEMBLY% like '%ASSEMBLY_TEXT%'
  and      %DB_ATTRIB_TYPE% = 2
  and      %DB_ATTRIB_DEPNO% not in %ASSEMBLY_PER_PAGE_FILTER_ATTRIB%
  and      ((%SORTPERBTYPE%=0) or ((%SORTPERBTYPE%<>0) and (%DB_ATTRIB_BTYPE%=%BTYPE%)))
  group by %DB_ATTRIB_PROJECT%, %DB_ATTRIB_ASSEMBLY%, %DB_ATTRIB_FRAME%,
           %DB_ATTRIB_ACC%, %DB_ATTRIB_VARIETY%, %DB_ATTRIB_SERIE%,
           %DB_ATTRIB_POSITION%
  having   count(*) > 0
  and      sum(%DB_ATTRIB_LENGTH%*%DB_ATTRIB_NO%) > 0

calculate
  break on %DB_ATTRIB_FRAME%

using %NAME%_3.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_GLASS_BATCH%) as %DB_GLASS_BATCH%,
           sum(%DB_GLASS_NO%) as %DB_GLASS_NO%,
           %DB_GLASS_DESC%,
           %DB_GLASS_WIDTH%,
           %DB_GLASS_HEIGHT%,
           sum(%DB_GLASS_SURFACE%) as %DB_GLASS_SURFACE%,
           sum(%DB_GLASS_WEIGHT%) as %DB_GLASS_WEIGHT%,
           sum(%DB_GLASS_PRICE%) as %DB_GLASS_PRICE%,
           %DB_GLASS_PROJECT%,
           %DB_GLASS_ASSEMBLY%,
           %DB_GLASS_FRAME%,
           min(%DB_GLASS_RGB%) as %DB_GLASS_RGB%,
           min(%DB_GLASS_BTYPE%) as %DB_GLASS_BTYPE%,
           min(%DB_GLASS_OPENING%) as %DB_GLASS_OPENING%,
           min(%DB_GLASS_VENTPART%) as %DB_GLASS_VENTPART%,
           min(%DB_GLASS_VENTOPENING%) as %DB_GLASS_VENTOPENING%,
           %DB_GLASS_POSITION%
  from     %TBL_GLASS%
  where    %DB_GLASS_PROJECT%  like '%PROJECT_TEXT%'
  and      %DB_GLASS_ASSEMBLY% like '%ASSEMBLY_TEXT%'
  and      %DB_GLASS_DEPNO% not in %ASSEMBLY_PER_PAGE_FILTER_GLASS%
  and      ((%SORTPERBTYPE%=0) or ((%SORTPERBTYPE%<>0) and (%DB_GLASS_BTYPE%=%BTYPE%)))
  group by %DB_GLASS_PROJECT%, %DB_GLASS_ASSEMBLY%, %DB_GLASS_FRAME%,
           %DB_GLASS_WIDTH%, %DB_GLASS_HEIGHT%, %DB_GLASS_DESC%,
           %DB_GLASS_POSITION%
  having   count(*) > 0

calculate
  break on %DB_GLASS_FRAME%

using %NAME%_4.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_EXTRA_BATCH%) as %DB_EXTRA_BATCH%,
           sum(%DB_EXTRA_NO%) as %DB_EXTRA_NO%,
           %DB_EXTRA_DESC%,
           %DB_EXTRA_WIDTH%,
           %DB_EXTRA_HEIGHT%,
           sum(%DB_EXTRA_PRICE%) as %DB_EXTRA_PRICE%,
           %DB_EXTRA_PROJECT%,
           %DB_EXTRA_ASSEMBLY%,
           %DB_EXTRA_FRAME%,
           min(%DB_EXTRA_RGB%) as %DB_EXTRA_RGB%,
           min(%DB_EXTRA_BTYPE%) as %DB_EXTRA_BTYPE%,
           %DB_EXTRA_POSITION%
  from     %TBL_EXTRA%
  where    %DB_EXTRA_PROJECT%  like '%PROJECT_TEXT%'
  and      %DB_EXTRA_ASSEMBLY% like '%ASSEMBLY_TEXT%'
  and      %DB_EXTRA_DEPNO% not in %ASSEMBLY_PER_PAGE_FILTER_EXTRA%
  and      ((%SORTPERBTYPE%=0) or ((%SORTPERBTYPE%<>0) and (%DB_EXTRA_BTYPE%=%BTYPE%)))
  group by %DB_EXTRA_PROJECT%, %DB_EXTRA_ASSEMBLY%, %DB_EXTRA_FRAME%,
           %DB_EXTRA_WIDTH%, %DB_EXTRA_HEIGHT%, %DB_EXTRA_DESC%,
           %DB_EXTRA_POSITION%
  having   count(*) > 0

calculate
  break on %DB_EXTRA_FRAME%

using %NAME%_5.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_GLASS_BATCH%) as %DB_GLASS_BATCH%,
           sum(%DB_GLASS_NO%) as %DB_GLASS_NO%,
           %DB_GLASS_DESC%,
           %DB_GLASS_WIDTH%,
           %DB_GLASS_HEIGHT%,
           sum(%DB_GLASS_OFFER%) as %DB_GLASS_OFFER%,
           sum(%DB_GLASS_PLACEMENT%) as %DB_GLASS_PLACEMENT%,
           %DB_GLASS_SUPPLIER%,
           %DB_GLASS_PROJECT%,
           %DB_GLASS_ASSEMBLY%,
           %DB_GLASS_FRAME%,
           min(%DB_GLASS_RGB%) as %DB_GLASS_RGB%,
           min(%DB_GLASS_BTYPE%) as %DB_GLASS_BTYPE%,
           min(%DB_GLASS_OPENING%) as %DB_GLASS_OPENING%,
           min(%DB_GLASS_VENTPART%) as %DB_GLASS_VENTPART%,
           min(%DB_GLASS_VENTOPENING%) as %DB_GLASS_VENTOPENING%,
           %DB_GLASS_LABEL%,
           min(%DB_GLASS_REMARK%) as %DB_GLASS_REMARK%,
           %DB_GLASS_POSITION%,
           %DB_GLASS_FILLING%,
           %DB_GLASS_INDEX%
  from     %TBL_GLASS%
  where    %DB_GLASS_PROJECT%  like '%PROJECT_TEXT%'
  and      %DB_GLASS_ASSEMBLY% like '%ASSEMBLY_TEXT%'
  and      %DB_GLASS_DEPNO% not in %ASSEMBLY_PER_PAGE_FILTER_GLASS%
  and      ((%DB_GLASS_SHAPEKIND%=1) or (%DB_GLASS_CROSSKIND%=%ASSEMBLY_PER_PAGE_CROSSES_SHOWCROSS%) or ((%ASSEMBLY_PER_PAGE_CROSSES_SHOWCROSS%=2) and (%DB_GLASS_CROSSKIND% in (0,1))))
  and      ((%SORTPERBTYPE%=0) or ((%SORTPERBTYPE%<>0) and (%DB_GLASS_BTYPE%=%BTYPE%)))
  group by %DB_GLASS_SUPPLIER%,
           %DB_GLASS_PROJECT%, %DB_GLASS_ASSEMBLY%, %DB_GLASS_FRAME%,
           %DB_GLASS_DESC%, %DB_GLASS_WIDTH%, %DB_GLASS_HEIGHT%,
           %DB_GLASS_LABEL%, %DB_GLASS_POSITION%,
           %DB_GLASS_FILLING%, %DB_GLASS_INDEX%
  having   count(*) > 0

calculate
  break on %DB_GLASS_FRAME%

using %NAME%_6.%REPORTTYPE%%LANGUAGE%

next

report
  select   %DB_ANNEX_PROJECT%,
           %DB_ANNEX_ASSEMBLY%,
           %DB_ANNEX_DESC%,
           %DB_ANNEX_KIND%
  from     %TBL_ANNEX%
  where    %DB_ANNEX_PROJECT%  = "%PROJECT_TEXT%"
  and      %DB_ANNEX_ASSEMBLY% = "%ASSEMBLY_TEXT%"
  and      %DB_ANNEX_KIND% = %REPORTSLOT%
  group by %DB_ANNEX_PROJECT%, %DB_ANNEX_ASSEMBLY%, 
           %DB_ANNEX_DESC%, %DB_ANNEX_KIND%
  having   count(*) > 0

calculate
  break on %DB_ANNEX_DESC%

using %FILE_ANNEX%

next

using
%IF{%EVAL{%ASSEMBLYCNT%+1 = %ASSEMBLYTOT%},,<page>}
