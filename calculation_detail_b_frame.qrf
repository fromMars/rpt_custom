; Calculatie detail

defines
;needed by JoPPS.QIF
  NO_COLORS     =0

include JoPPS.QIF
include Part.QIF
include Piece.QIF
include Attrib.QIF
include Glass.QIF
include Extra.QIF
include Mops.QIF
include Annex.QIF

defines
  C_VIEWPOINT_LEFT            =1
  C_VIEWPOINT_RIGHT           =2
  C_VIEWPOINT_BOTTOM          =3
  C_VIEWPOINT_TOP             =4

  DETAIL_TRACE                =%CALCULATION_DETAIL_FORMAT%
  DB_PART_NO_SUM              =SOMAANTAL
  DB_PART_TIME1_SUM           =SOMTIJD1
  DB_PART_TIME2_SUM           =SOMTIJD2
  DB_PIECE_CFPRICE_SUM        =SOMPRIJS
  DB_PIECE_JOBTIME_SUM        =SOMTIJD0
  DB_PIECE_TIME1_SUM          =SOMTIJD1
  DB_PIECE_TIME2_SUM          =SOMTIJD2
  DB_ATTRIB_JOBTIME_SUM       =SOMTIJD0
  DB_ATTRIB_TIME1_SUM         =SOMTIJD1
  DB_ATTRIB_TIME2_SUM         =SOMTIJD2
  DB_GLASS_JOBTIME_SUM        =SOMTIJD0
  DB_GLASS_TIME1_SUM          =SOMTIJD1
  DB_GLASS_TIME2_SUM          =SOMTIJD2
  DB_EXTRA_JOBTIME_SUM        =SOMTIJD0
  DB_EXTRA_TIME1_SUM          =SOMTIJD1
  DB_EXTRA_TIME2_SUM          =SOMTIJD2
  DB_MOPS_NO_SUM              =SOMAANTAL
  DB_MOPS_JOBTIME_SUM         =SOMTIJD0
  DB_MOPS_TIME1_SUM           =SOMTIJD1
  DB_MOPS_TIME2_SUM           =SOMTIJD2
  DB_PART_NO                  =AANTAL
  M_DB_PART_REBATE            =%IF{%CALCULATION_DETAIL_REBATE%,(1-%DB_PART_REBATE%/100),1}
  M_DB_CHARGE_REBATE          =%IF{%CALCULATION_SUMMARY_REBATE%,(1-%DB_CHARGE_REBATE%/100),1}
  M_DB_PIECE_REBATE           =%IF{%CALCULATION_DETAIL_REBATE%,(1-%DB_PIECE_REBATE%/100),1}
  M_DB_ATTRIB_REBATE          =%IF{%CALCULATION_DETAIL_REBATE%,(1-%DB_ATTRIB_REBATE%/100),1}
  M_DB_GLASS_REBATE           =%IF{%CALCULATION_DETAIL_REBATE%,(1-%DB_GLASS_REBATE%/100),1}
  M_DB_EXTRA_REBATE           =%IF{%CALCULATION_DETAIL_REBATE%,(1-%DB_EXTRA_REBATE%/100),1}

fields
  SH_VIEW_LEFT                ="SHOWVIEWPOINT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;%FRAME_TEXT%;%CALCULATION_DETAIL_SCENARIO%;%C_VIEWPOINT_LEFT%"   DISPLAY AS EXTERNAL   
  SH_VIEW_RIGHT               ="SHOWVIEWPOINT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;%FRAME_TEXT%;%CALCULATION_DETAIL_SCENARIO%;%C_VIEWPOINT_RIGHT%"  DISPLAY AS EXTERNAL   
  SH_VIEW_BOTTOM              ="SHOWVIEWPOINT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;%FRAME_TEXT%;%CALCULATION_DETAIL_SCENARIO%;%C_VIEWPOINT_BOTTOM%" DISPLAY AS EXTERNAL   
  SH_VIEW_TOP                 ="SHOWVIEWPOINT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;%FRAME_TEXT%;%CALCULATION_DETAIL_SCENARIO%;%C_VIEWPOINT_TOP%"    DISPLAY AS EXTERNAL   

  DSP_VIEWLEFT                ="VIEWPNT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;%FRAME_TEXT%;%CALCULATION_DETAIL_WIDTH%;%CALCULATION_DETAIL_HEIGHT%;%CALCULATION_DETAIL_SIZE%;#
                               %C_VIEWPOINT_LEFT%;%CALCULATION_DETAIL_MEASURES%;%CALCULATION_DETAIL_OUTLINECOLOR%;%CALCULATION_DETAIL_SCALE%;;#
                               %CALCULATION_DETAIL_VIEWPOINT%;%GLOBAL_OUTLINERESOL%;%CALCULATION_DETAIL_SCENARIO%" DISPLAY AS IMGREF(0,0,0)
  DSP_VIEWRIGHT               ="VIEWPNT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;%FRAME_TEXT%;%CALCULATION_DETAIL_WIDTH%;%CALCULATION_DETAIL_HEIGHT%;%CALCULATION_DETAIL_SIZE%;#
                               %C_VIEWPOINT_RIGHT%;%CALCULATION_DETAIL_MEASURES%;%CALCULATION_DETAIL_OUTLINECOLOR%;%CALCULATION_DETAIL_SCALE%;;#
                               %CALCULATION_DETAIL_VIEWPOINT%;%GLOBAL_OUTLINERESOL%;%CALCULATION_DETAIL_SCENARIO%" DISPLAY AS IMGREF(0,0,0)
  DSP_VIEWBOTTOM              ="VIEWPNT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;%FRAME_TEXT%;%CALCULATION_DETAIL_WIDTH%;%CALCULATION_DETAIL_HEIGHT%;%CALCULATION_DETAIL_SIZE%;#
                               %C_VIEWPOINT_BOTTOM%;%CALCULATION_DETAIL_MEASURES%;%CALCULATION_DETAIL_OUTLINECOLOR%;%CALCULATION_DETAIL_SCALE%;;#
                               %CALCULATION_DETAIL_VIEWPOINT%;%GLOBAL_OUTLINERESOL%;%CALCULATION_DETAIL_SCENARIO%" DISPLAY AS IMGREF(0,0,0)
  DSP_VIEWTOP                 ="VIEWPNT:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;%FRAME_TEXT%;%CALCULATION_DETAIL_WIDTH%;%CALCULATION_DETAIL_HEIGHT%;%CALCULATION_DETAIL_SIZE%;#
                               %C_VIEWPOINT_TOP%;%CALCULATION_DETAIL_MEASURES%;%CALCULATION_DETAIL_OUTLINECOLOR%;%CALCULATION_DETAIL_SCALE%;;#
                               %CALCULATION_DETAIL_VIEWPOINT%;%GLOBAL_OUTLINERESOL%;%CALCULATION_DETAIL_SCENARIO%" DISPLAY AS IMGREF(0,0,0)
  DSP_DRAWCALCULATIONFRAME    ="DRAWING:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;%FRAME_TEXT%;%CALCULATION_DETAIL_WIDTH%;%CALCULATION_DETAIL_HEIGHT%;#
                               %CALCULATION_DETAIL_MEASURES%;%CALCULATION_DETAIL_OUTLINECOLOR%;%CALCULATION_DETAIL_SCALE%;0;0;0;0;0;#
							   %CALCULATION_DETAIL_VIEWPOINT%;%GLOBAL_OUTLINERESOL%;;%CALCULATION_DETAIL_SCENARIO%;;;#
                               %CALCULATION_DETAIL_REFFRAME%;%CALCULATION_DETAIL_REFVENT%" DISPLAY AS IMGREF(0,0,0)
  DSP_SCALE                   ="SCALE:%PROJECT_TEXT%;%ASSEMBLY_TEXT%;%FRAME_TEXT%;%CALCULATION_DETAIL_WIDTH%;%CALCULATION_DETAIL_HEIGHT%;#
                               %CALCULATION_DETAIL_MEASURES%;%CALCULATION_DETAIL_SCALE%;%GLOBAL_OUTLINERESOL%;%CALCULATION_DETAIL_SCENARIO%" DISPLAY AS EXTERNAL
  DSP_PART_NO_SUM             = @%DB_PART_NO_SUM%         DISPLAY AS %FD_TOTQUANTITY%
  DSP_PART_PRICE_SUM          = @2                        DISPLAY AS %FD_TOTUNITS%
  DSP_PART_TIME1_SUM          = @%DB_PART_TIME1_SUM%      DISPLAY AS %FD_TOTTIME%
  DSP_PART_TIME2_SUM          = @%DB_PART_TIME2_SUM%      DISPLAY AS %FD_TOTTIME%

  DSP_PIECE_CFLENGTH_SUM      = @1                        DISPLAY AS %FD_TOTMEASURE1%
  DSP_PIECE_CFREMLENGTH_SUM   = @1                        DISPLAY AS %FD_TOTMEASURE1%
  DSP_PIECE_CFPRICE_SUM       = @%DB_PIECE_CFPRICE_SUM%   DISPLAY AS %FD_TOTUNITS%
  DSP_PIECE_JOBTIME_SUM       = @%DB_PIECE_JOBTIME_SUM%   DISPLAY AS %FD_TOTTIME%
  DSP_PIECE_TIME1_SUM         = @%DB_PIECE_TIME1_SUM%     DISPLAY AS %FD_TOTTIME%
  DSP_PIECE_TIME2_SUM         = @%DB_PIECE_TIME2_SUM%     DISPLAY AS %FD_TOTTIME%

  DSP_ATTRIB_CFLENGTH_SUM     = @1                        DISPLAY AS %FD_TOTMEASURE1%
  DSP_ATTRIB_NO_SUM           = @1                        DISPLAY AS %FD_TOTQUANTITY%
  DSP_ATTRIB_CFPRICE_SUM      = @2                        DISPLAY AS %FD_TOTUNITS%
  DSP_ATTRIB_JOBTIME_SUM      = @%DB_ATTRIB_JOBTIME_SUM%  DISPLAY AS %FD_TOTTIME%
  DSP_ATTRIB_TIME1_SUM        = @%DB_ATTRIB_TIME1_SUM%    DISPLAY AS %FD_TOTTIME%
  DSP_ATTRIB_TIME2_SUM        = @%DB_ATTRIB_TIME2_SUM%    DISPLAY AS %FD_TOTTIME%

  DSP_GLASS_NO_SUM            = @1                        DISPLAY AS %FD_TOTQUANTITY%
  DSP_GLASS_CFPRICE_SUM       = @2                        DISPLAY AS %FD_TOTUNITS%
  DSP_GLASS_JOBTIME_SUM       = @%DB_GLASS_JOBTIME_SUM%   DISPLAY AS %FD_TOTTIME%
  DSP_GLASS_TIME1_SUM         = @%DB_GLASS_TIME1_SUM%     DISPLAY AS %FD_TOTTIME%
  DSP_GLASS_TIME2_SUM         = @%DB_GLASS_TIME2_SUM%     DISPLAY AS %FD_TOTTIME%

  DSP_EXTRA_NO_SUM            = @1                        DISPLAY AS %FD_TOTQUANTITY%
  DSP_EXTRA_CFPRICE_SUM       = @2                        DISPLAY AS %FD_TOTUNITS%
  DSP_EXTRA_JOBTIME_SUM       = @%DB_EXTRA_JOBTIME_SUM%   DISPLAY AS %FD_TOTTIME%
  DSP_EXTRA_TIME1_SUM         = @%DB_EXTRA_TIME1_SUM%     DISPLAY AS %FD_TOTTIME%
  DSP_EXTRA_TIME2_SUM         = @%DB_EXTRA_TIME2_SUM%     DISPLAY AS %FD_TOTTIME%

  DSP_MOPS_NO_SUM             = @%DB_MOPS_NO_SUM%         DISPLAY AS %FD_TOTQUANTITY%
  DSP_MOPS_JOBTIME_SUM        = @%DB_MOPS_JOBTIME_SUM%    DISPLAY AS %FD_TOTTIME%
  DSP_MOPS_TIME1_SUM          = @%DB_MOPS_TIME1_SUM%      DISPLAY AS %FD_TOTTIME%
  DSP_MOPS_TIME2_SUM          = @%DB_MOPS_TIME2_SUM%      DISPLAY AS %FD_TOTTIME%

  DSP_PART_NO                 = @%DB_PART_NO%             DISPLAY AS %FD_QUANTITY%

  M_B_SPLIT                   = %IF{@%DB_PIECE_CFSPLIT%,,<i>}  DISPLAY AS LEFT(3)
  M_E_SPLIT                   = %IF{@%DB_PIECE_CFSPLIT%,,</i>} DISPLAY AS LEFT(4)

using %IF{%CALCULATION_DETAIL_OUTLINES%,%NAME%_drw.%REPORTTYPE%%LANGUAGE%,NUL}

next

report
  select   count(*) as %DB_PART_NO%,
           sum(%DB_PART_PRICE% * %M_DB_PART_REBATE%) as %DB_PART_PRICE%,
           sum(%DB_PART_TIME1%) as %DB_PART_TIME1%,
           sum(%DB_PART_TIME2%) as %DB_PART_TIME2%,
           %DB_PART_ID%,
           %DB_PART_DESC%,
           %DB_PART_ARTICLE%,
           %DB_PART_DATALINK%,
           %DB_PART_PROJECT%,
           %DB_PART_ASSEMBLY%,
           %DB_PART_FRAME%
  from     %TBL_PART%
  where    ((%DB_PART_PRICE% <> 0) or (%DB_PART_TIME1% <> 0) or (%DB_PART_TIME2% <> 0))
  and      %DB_PART_PROJECT% = "%PROJECT_TEXT%"
  and      %DB_PART_ASSEMBLY% = "%ASSEMBLY_TEXT%"
  and      %DB_PART_FRAME% = "%FRAME_TEXT%"
  and      %DB_PART_ID% in (401,402)
  group by %DB_PART_PROJECT%, %DB_PART_ASSEMBLY%, %DB_PART_FRAME%,  
           %DB_PART_ID%, %DB_PART_DESC%, %DB_PART_ARTICLE%,
           %DB_PART_DATALINK%
  having   count(*) > 0

calculate
  sum(%DB_PART_NO%) as %DB_PART_NO_SUM%, sum(%DB_PART_PRICE%), sum(%DB_PART_TIME1%) as %DB_PART_TIME1_SUM%, sum(%DB_PART_TIME2%) as %DB_PART_TIME2_SUM% break on %DB_PART_PROJECT%, %DB_PART_ASSEMBLY%, %DB_PART_FRAME%

using %NAME%_0.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_PIECE_BATCH%) as %DB_PIECE_BATCH%,
           sum(%DB_PIECE_CFLENGTH%) as %DB_PIECE_CFLENGTH%,
           %DB_PIECE_PRODUCT%,
           %DB_PIECE_SERIE%,
           min(%DB_PIECE_PROFILEDESC%) as %DB_PIECE_PROFILEDESC%,
           min(%DB_PIECE_ARTICLECODE%) as %DB_PIECE_ARTICLECODE%,
           %DB_PIECE_ARTICLE%,
           min(%DB_PIECE_RGB%) as %DB_PIECE_RGB%,
           sum(%DB_PIECE_CFPRICE% * %M_DB_PIECE_REBATE%) as %DB_PIECE_CFPRICE%,
           sum(%DB_PIECE_CFPRICE% * %DB_PIECE_CFSPLIT% * %M_DB_PIECE_REBATE%) as %DB_PIECE_CFPRICE_SUM%,
           sum(%DB_PIECE_JOBTIME%) as %DB_PIECE_JOBTIME%,
           sum(%DB_PIECE_JOBTIME% * %DB_PIECE_CFSPLIT%) as %DB_PIECE_JOBTIME_SUM%,
           sum(%DB_PIECE_TIME1%) as %DB_PIECE_TIME1%,
           sum(%DB_PIECE_TIME1% * %DB_PIECE_CFSPLIT%) as %DB_PIECE_TIME1_SUM%,
           sum(%DB_PIECE_TIME2%) as %DB_PIECE_TIME2%,
           sum(%DB_PIECE_TIME2% * %DB_PIECE_CFSPLIT%) as %DB_PIECE_TIME2_SUM%,
           %IF{%DETAIL_TRACE%,%DB_PIECE_LINK%,min(%DB_PIECE_LINK%) as %DB_PIECE_LINK%},
           %DB_PIECE_VARIETY%,
           %DB_PIECE_DATALINK%,
           %DB_PIECE_PROJECT%,
           %DB_PIECE_ASSEMBLY%,
           %DB_PIECE_FRAME%,
           min(%DB_PIECE_OPENING%) as %DB_PIECE_OPENING%,
           min(%DB_PIECE_VENTPART%) as %DB_PIECE_VENTPART%,
		   min(%DB_PIECE_CFSPLIT%) as %DB_PIECE_CFSPLIT%
  from     %TBL_PIECE%
  where    %DB_PIECE_PROJECT% = "%PROJECT_TEXT%"
  and      %DB_PIECE_ASSEMBLY% = "%ASSEMBLY_TEXT%"
  and      %DB_PIECE_FRAME% = "%FRAME_TEXT%"
  and      %DB_PIECE_DEPNO% > 0
  and      %DB_PIECE_NO% > 0
  and		%DB_PIECE_SPLIT%<>-2
  group by %DB_PIECE_PROJECT%, %DB_PIECE_ASSEMBLY%, %DB_PIECE_FRAME%,
           %DB_PIECE_ARTICLE%, %DB_PIECE_PRODUCT%, 
           %DB_PIECE_VARIETY%, %DB_PIECE_SERIE%, 
           %DB_PIECE_SYSTEM%, %DB_PIECE_PROFILE%,
           %DB_PIECE_DATALINK%
           %IF{%DETAIL_TRACE%,%COMMA% %DB_PIECE_LINK%,}
  having   count(*) > 0

calculate
  sum(%DB_PIECE_CFLENGTH%), sum(%DB_PIECE_CFPRICE_SUM%) as %DB_PIECE_CFPRICE_SUM%, sum(%DB_PIECE_JOBTIME_SUM%) as %DB_PIECE_JOBTIME_SUM%, sum(%DB_PIECE_TIME1_SUM%) as %DB_PIECE_TIME1_SUM%, sum(%DB_PIECE_TIME2_SUM%) as %DB_PIECE_TIME2_SUM% break on %DB_PIECE_PROJECT%, %DB_PIECE_ASSEMBLY%, %DB_PIECE_FRAME%
  sum(%DB_PIECE_CFLENGTH%), sum(%DB_PIECE_CFPRICE_SUM%) as %DB_PIECE_CFPRICE_SUM%, sum(%DB_PIECE_JOBTIME_SUM%) as %DB_PIECE_JOBTIME_SUM%, sum(%DB_PIECE_TIME1_SUM%) as %DB_PIECE_TIME1_SUM%, sum(%DB_PIECE_TIME2_SUM%) as %DB_PIECE_TIME2_SUM% break on %DB_PIECE_PROJECT%, %DB_PIECE_ASSEMBLY%, %DB_PIECE_FRAME%, %DB_PIECE_ARTICLE%

using %NAME%_1.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_ATTRIB_BATCH%) as %DB_ATTRIB_BATCH%,
           sum(%DB_ATTRIB_NO%) as %DB_ATTRIB_NO%,
           %DB_ATTRIB_ACC%,
           %DB_ATTRIB_SERIE%,
           min(%DB_ATTRIB_ACCDESC%) as %DB_ATTRIB_ACCDESC%,
           min(%DB_ATTRIB_ARTICLECODE%) as %DB_ATTRIB_ARTICLECODE%,
           %DB_ATTRIB_ARTICLE%,
           min(%DB_ATTRIB_RGB%) as %DB_ATTRIB_RGB%,
           sum(%DB_ATTRIB_CFPRICE% * %M_DB_ATTRIB_REBATE%) as %DB_ATTRIB_CFPRICE%,
           sum(%DB_ATTRIB_JOBTIME%) as %DB_ATTRIB_JOBTIME%,
           sum(%DB_ATTRIB_TIME1%) as %DB_ATTRIB_TIME1%,
           sum(%DB_ATTRIB_TIME2%) as %DB_ATTRIB_TIME2%,
           %IF{%DETAIL_TRACE%,%DB_ATTRIB_LINK%,min(%DB_ATTRIB_LINK%) as %DB_ATTRIB_LINK%},
           %DB_ATTRIB_VARIETY%,
           %DB_ATTRIB_DATALINK%,
           %DB_ATTRIB_PROJECT%,
           %DB_ATTRIB_ASSEMBLY%,
           %DB_ATTRIB_FRAME%,
           min(%DB_ATTRIB_OPENING%) as %DB_ATTRIB_OPENING%,
           min(%DB_ATTRIB_VENTPART%) as %DB_ATTRIB_VENTPART%
  from     %TBL_ATTRIB%
  where    %DB_ATTRIB_PROJECT% = "%PROJECT_TEXT%"
  and      %DB_ATTRIB_ASSEMBLY% = "%ASSEMBLY_TEXT%"
  and      %DB_ATTRIB_FRAME% = "%FRAME_TEXT%"
  and      %DB_ATTRIB_TYPE% = 1
  and      %DB_ATTRIB_DEPNO% > 0
  group by %DB_ATTRIB_PROJECT%, %DB_ATTRIB_ASSEMBLY%, %DB_ATTRIB_FRAME%,
           %DB_ATTRIB_ARTICLE%, %DB_ATTRIB_ACC%, 
           %DB_ATTRIB_VARIETY%, %DB_ATTRIB_SERIE%,
           %DB_ATTRIB_DATALINK%
           %IF{%DETAIL_TRACE%,%COMMA% %DB_ATTRIB_LINK%,}
  having   count(*) > 0

calculate
  sum(%DB_ATTRIB_NO%), sum(%DB_ATTRIB_CFPRICE%), sum(%DB_ATTRIB_JOBTIME%) as %DB_ATTRIB_JOBTIME_SUM%, sum(%DB_ATTRIB_TIME1%) as %DB_ATTRIB_TIME1_SUM%, sum(%DB_ATTRIB_TIME2%) as %DB_ATTRIB_TIME2_SUM% break on %DB_ATTRIB_PROJECT%, %DB_ATTRIB_ASSEMBLY%, %DB_ATTRIB_FRAME%
  sum(%DB_ATTRIB_NO%), sum(%DB_ATTRIB_CFPRICE%), sum(%DB_ATTRIB_JOBTIME%) as %DB_ATTRIB_JOBTIME_SUM%, sum(%DB_ATTRIB_TIME1%) as %DB_ATTRIB_TIME1_SUM%, sum(%DB_ATTRIB_TIME2%) as %DB_ATTRIB_TIME2_SUM% break on %DB_ATTRIB_PROJECT%, %DB_ATTRIB_ASSEMBLY%, %DB_ATTRIB_FRAME%, %DB_ATTRIB_ARTICLE%

using %NAME%_2.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_ATTRIB_BATCH%) as %DB_ATTRIB_BATCH%,
           sum(%DB_ATTRIB_CFLENGTH%) as %DB_ATTRIB_CFLENGTH%,
           %DB_ATTRIB_ACC%,
           %DB_ATTRIB_SERIE%,
           min(%DB_ATTRIB_ACCDESC%) as %DB_ATTRIB_ACCDESC%,
           min(%DB_ATTRIB_ARTICLECODE%) as %DB_ATTRIB_ARTICLECODE%,
           %DB_ATTRIB_ARTICLE%,
           min(%DB_ATTRIB_RGB%) as %DB_ATTRIB_RGB%,
           sum(%DB_ATTRIB_CFPRICE% * %M_DB_ATTRIB_REBATE%) as %DB_ATTRIB_CFPRICE%,
           sum(%DB_ATTRIB_JOBTIME%) as %DB_ATTRIB_JOBTIME%,
           sum(%DB_ATTRIB_TIME1%) as %DB_ATTRIB_TIME1%,
           sum(%DB_ATTRIB_TIME2%) as %DB_ATTRIB_TIME2%,
           %IF{%DETAIL_TRACE%,%DB_ATTRIB_LINK%,min(%DB_ATTRIB_LINK%) as %DB_ATTRIB_LINK%},
           %DB_ATTRIB_VARIETY%,
           %DB_ATTRIB_DATALINK%,
           %DB_ATTRIB_PROJECT%,
           %DB_ATTRIB_ASSEMBLY%,
           %DB_ATTRIB_FRAME%,
           min(%DB_ATTRIB_OPENING%) as %DB_ATTRIB_OPENING%,
           min(%DB_ATTRIB_VENTPART%) as %DB_ATTRIB_VENTPART%
  from     %TBL_ATTRIB%
  where    %DB_ATTRIB_PROJECT% = "%PROJECT_TEXT%"
  and      %DB_ATTRIB_ASSEMBLY% = "%ASSEMBLY_TEXT%"
  and      %DB_ATTRIB_FRAME% = "%FRAME_TEXT%"
  and      %DB_ATTRIB_TYPE% = 2
  and      %DB_ATTRIB_DEPNO% > 0
  group by %DB_ATTRIB_PROJECT%, %DB_ATTRIB_ASSEMBLY%, %DB_ATTRIB_FRAME%,
           %DB_ATTRIB_ARTICLE%, %DB_ATTRIB_ACC%, 
           %DB_ATTRIB_VARIETY%, %DB_ATTRIB_SERIE%,
           %DB_ATTRIB_DATALINK%
           %IF{%DETAIL_TRACE%,%COMMA% %DB_ATTRIB_LINK%,}
  having   count(*) > 0

calculate
  sum(%DB_ATTRIB_CFLENGTH%), sum(%DB_ATTRIB_CFPRICE%), sum(%DB_ATTRIB_JOBTIME%) as %DB_ATTRIB_JOBTIME_SUM%, sum(%DB_ATTRIB_TIME1%) as %DB_ATTRIB_TIME1_SUM%, sum(%DB_ATTRIB_TIME2%) as %DB_ATTRIB_TIME2_SUM% break on %DB_ATTRIB_PROJECT%, %DB_ATTRIB_ASSEMBLY%, %DB_ATTRIB_FRAME%
  sum(%DB_ATTRIB_CFLENGTH%), sum(%DB_ATTRIB_CFPRICE%), sum(%DB_ATTRIB_JOBTIME%) as %DB_ATTRIB_JOBTIME_SUM%, sum(%DB_ATTRIB_TIME1%) as %DB_ATTRIB_TIME1_SUM%, sum(%DB_ATTRIB_TIME2%) as %DB_ATTRIB_TIME2_SUM% break on %DB_ATTRIB_PROJECT%, %DB_ATTRIB_ASSEMBLY%, %DB_ATTRIB_FRAME%, %DB_ATTRIB_ARTICLE%

using %NAME%_3.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_GLASS_BATCH%) as %DB_GLASS_BATCH%,
           sum(%DB_GLASS_NO%) as %DB_GLASS_NO%,
           %DB_GLASS_FILLING%,
           %DB_GLASS_DESC%,
           %DB_GLASS_ARTICLE%,
           min(%DB_GLASS_RGB%) as %DB_GLASS_RGB%,
           sum((%DB_GLASS_CFPRICE% - %DB_GLASS_SURPLUS% - %DB_GLASS_CHARGE% - %DB_GLASS_CROSS%) * %M_DB_GLASS_REBATE%) as %DB_GLASS_CFPRICE%,
           sum(%DB_GLASS_JOBTIME%) as %DB_GLASS_JOBTIME%,
           sum(%DB_GLASS_TIME1%) as %DB_GLASS_TIME1%,
           sum(%DB_GLASS_TIME2%) as %DB_GLASS_TIME2%,
           %IF{%DETAIL_TRACE%,%DB_GLASS_LINK%,min(%DB_GLASS_LINK%) as %DB_GLASS_LINK%},
           %DB_GLASS_DATALINK%,
           %DB_GLASS_PROJECT%,
           %DB_GLASS_ASSEMBLY%,
           %DB_GLASS_FRAME%,
           min(%DB_GLASS_OPENING%) as %DB_GLASS_OPENING%,
           min(%DB_GLASS_VENTPART%) as %DB_GLASS_VENTPART%,
           min(%DB_GLASS_VENTOPENING%) as %DB_GLASS_VENTOPENING%
  from     %TBL_GLASS%
  where    %DB_GLASS_PROJECT% = "%PROJECT_TEXT%"
  and      %DB_GLASS_ASSEMBLY% = "%ASSEMBLY_TEXT%"
  and      %DB_GLASS_FRAME% = "%FRAME_TEXT%"
  and      %DB_GLASS_DEPNO% > 0
  group by %DB_GLASS_PROJECT%, %DB_GLASS_ASSEMBLY%, %DB_GLASS_FRAME%,
           %DB_GLASS_ARTICLE%, %DB_GLASS_FILLING%, %DB_GLASS_DESC%, 
           %DB_GLASS_DATALINK%
           %IF{%DETAIL_TRACE%,%COMMA% %DB_GLASS_LINK%,}
  having   count(*) > 0

calculate
  sum(%DB_GLASS_NO%), sum(%DB_GLASS_CFPRICE%), sum(%DB_GLASS_JOBTIME%) as %DB_GLASS_JOBTIME_SUM%, sum(%DB_GLASS_TIME1%) as %DB_GLASS_TIME1_SUM%, sum(%DB_GLASS_TIME2%) as %DB_GLASS_TIME2_SUM% break on %DB_GLASS_PROJECT%, %DB_GLASS_ASSEMBLY%, %DB_GLASS_FRAME%
  sum(%DB_GLASS_NO%), sum(%DB_GLASS_CFPRICE%), sum(%DB_GLASS_JOBTIME%) as %DB_GLASS_JOBTIME_SUM%, sum(%DB_GLASS_TIME1%) as %DB_GLASS_TIME1_SUM%, sum(%DB_GLASS_TIME2%) as %DB_GLASS_TIME2_SUM% break on %DB_GLASS_PROJECT%, %DB_GLASS_ASSEMBLY%, %DB_GLASS_FRAME%, %DB_GLASS_ARTICLE%

using %NAME%_4.%REPORTTYPE%%LANGUAGE%

next

report
  select   min(%DB_EXTRA_BATCH%) as %DB_EXTRA_BATCH%,
           sum(%DB_EXTRA_NO%) as %DB_EXTRA_NO%,
           %DB_EXTRA_FINISH%,
           %DB_EXTRA_DESC%,
           %DB_EXTRA_ARTICLE%,
           min(%DB_EXTRA_RGB%) as %DB_EXTRA_RGB%,
           sum(%DB_EXTRA_CFPRICE% * %M_DB_EXTRA_REBATE%) as %DB_EXTRA_CFPRICE%,
           sum(%DB_EXTRA_JOBTIME%) as %DB_EXTRA_JOBTIME%,
           sum(%DB_EXTRA_TIME1%) as %DB_EXTRA_TIME1%,
           sum(%DB_EXTRA_TIME2%) as %DB_EXTRA_TIME2%,
           %IF{%DETAIL_TRACE%,%DB_EXTRA_LINK%,min(%DB_EXTRA_LINK%) as %DB_EXTRA_LINK%},
           %DB_EXTRA_DATALINK%,
           %DB_EXTRA_PROJECT%,
           %DB_EXTRA_ASSEMBLY%,
           %DB_EXTRA_FRAME%
  from     %TBL_EXTRA%
  where    %DB_EXTRA_PROJECT% = "%PROJECT_TEXT%"
  and      %DB_EXTRA_ASSEMBLY% = "%ASSEMBLY_TEXT%"
  and      %DB_EXTRA_FRAME% = "%FRAME_TEXT%"
  and      %DB_EXTRA_DEPNO% > 0
  group by %DB_EXTRA_PROJECT%, %DB_EXTRA_ASSEMBLY%, %DB_EXTRA_FRAME%,
           %DB_EXTRA_ARTICLE%, %DB_EXTRA_FINISH%, %DB_EXTRA_DESC%, 
           %DB_EXTRA_DATALINK%
           %IF{%DETAIL_TRACE%,%COMMA% %DB_EXTRA_LINK%,}
  having   count(*) > 0

calculate
  sum(%DB_EXTRA_NO%), sum(%DB_EXTRA_CFPRICE%), sum(%DB_EXTRA_JOBTIME%) as %DB_EXTRA_JOBTIME_SUM%, sum(%DB_EXTRA_TIME1%) as %DB_EXTRA_TIME1_SUM%, sum(%DB_EXTRA_TIME2%) as %DB_EXTRA_TIME2_SUM% break on %DB_EXTRA_PROJECT%, %DB_EXTRA_ASSEMBLY%, %DB_EXTRA_FRAME%
  sum(%DB_EXTRA_NO%), sum(%DB_EXTRA_CFPRICE%), sum(%DB_EXTRA_JOBTIME%) as %DB_EXTRA_JOBTIME_SUM%, sum(%DB_EXTRA_TIME1%) as %DB_EXTRA_TIME1_SUM%, sum(%DB_EXTRA_TIME2%) as %DB_EXTRA_TIME2_SUM% break on %DB_EXTRA_PROJECT%, %DB_EXTRA_ASSEMBLY%, %DB_EXTRA_FRAME%, %DB_EXTRA_ARTICLE%

using %NAME%_5.%REPORTTYPE%%LANGUAGE%

next

report
  select   sum(%DB_MOPS_NO%) as %DB_MOPS_NO%,
           %DB_MOPS_CODE%,
           %DB_MOPS_DESC%,
           sum(%DB_MOPS_JOBTIME%) as %DB_MOPS_JOBTIME%,
           sum(%DB_MOPS_TIME1%) as %DB_MOPS_TIME1%,
           sum(%DB_MOPS_TIME2%) as %DB_MOPS_TIME2%,
           %IF{%DETAIL_TRACE%,%DB_MOPS_LINK%,min(%DB_MOPS_LINK%) as %DB_MOPS_LINK%},
           %DB_MOPS_PROJECT%,
           %DB_MOPS_ASSEMBLY%,
           %DB_MOPS_FRAME%
  from     %TBL_MOPS%
  where    %DB_MOPS_PROJECT% = "%PROJECT_TEXT%"
  and      %DB_MOPS_ASSEMBLY% = "%ASSEMBLY_TEXT%"
  and      %DB_MOPS_FRAME% = "%FRAME_TEXT%"
  and      %DB_MOPS_DEPNO% > 0
  group by %DB_MOPS_PROJECT%, %DB_MOPS_ASSEMBLY%, %DB_MOPS_FRAME%,
           %DB_MOPS_CODE%, %DB_MOPS_DESC%
           %IF{%DETAIL_TRACE%,%COMMA% %DB_MOPS_LINK%,}
  having   count(*) > 0

calculate
  sum(%DB_MOPS_NO%) as %DB_MOPS_NO_SUM%, sum(%DB_MOPS_JOBTIME%) as %DB_MOPS_JOBTIME_SUM%, sum(%DB_MOPS_TIME1%) as %DB_MOPS_TIME1_SUM%, sum(%DB_MOPS_TIME2%) as %DB_MOPS_TIME2_SUM% break on %DB_MOPS_PROJECT%, %DB_MOPS_ASSEMBLY%, %DB_MOPS_FRAME%

using %NAME%_6.%REPORTTYPE%%LANGUAGE%

next

report
  select   %DB_ANNEX_PROJECT%,
           %DB_ANNEX_ASSEMBLY%,
           %DB_ANNEX_DESC%,
           %DB_ANNEX_KIND%
  from     %TBL_ANNEX%
  where    %DB_ANNEX_PROJECT%  = "%PROJECT_TEXT%"
  and      %DB_ANNEX_ASSEMBLY% = "%ASSEMBLY_TEXT%"
  and      %DB_ANNEX_KIND% = %REPORTSLOT%
  group by %DB_ANNEX_PROJECT%, %DB_ANNEX_ASSEMBLY%, 
           %DB_ANNEX_DESC%, %DB_ANNEX_KIND%
  having   count(*) > 0

calculate
  break on %DB_ANNEX_DESC%

using %IF{%EVAL{(%FRAMECNT%+1 = %FRAMETOT%)},%FILE_ANNEX%,nul}

next

using
%IF{%EVAL{(%ASSEMBLYCNT%+1 = %ASSEMBLYTOT%) && (%FRAMECNT%+1 = %FRAMETOT%)},,<page>}
